"use strict";var K=Object.defineProperty;var Me=Object.getOwnPropertyDescriptor;var Be=Object.getOwnPropertyNames;var Pe=Object.prototype.hasOwnProperty;var y=(e,a)=>()=>(e&&(a=e(e=0)),a);var v=(e,a)=>{for(var o in a)K(e,o,{get:a[o],enumerable:!0})},Ge=(e,a,o,s)=>{if(a&&typeof a=="object"||typeof a=="function")for(let i of Be(a))!Pe.call(e,i)&&i!==o&&K(e,i,{get:()=>a[i],enumerable:!(s=Me(a,i))||s.enumerable});return e};var C=e=>Ge(K({},"__esModule",{value:!0}),e);function $(e=We){let a=e.value.split(`
`);return{start:{line:e.line,col:e.col-1},end:{line:e.line+a.length-1,col:e.col-1+a[a.length-1].length}}}var We,h=y(()=>{"use strict";We={value:"",offset:0,lineBreaks:0,line:1,col:1,text:""}});var ee={};v(ee,{formatLexError:()=>V,lexer:()=>Fe});function V(e){let a=Math.min(e.token.value.length,...[" ",`\r
`,`
`].map(s=>e.token.value.indexOf(s)).filter(s=>s!==-1)),o=e.token.col+a;return{name:"ParseError",message:`Unable to parse '${e.token.value.slice(0,a)}'.`,boundaries:{start:$(e.token).start,end:{line:$(e.token).start.line,col:o}}}}var X,Fe,z=y(()=>{"use strict";X=require("moo");h();Fe=(0,X.states)({main:{eol:{match:/\s*\n\s*/,lineBreaks:!0},space:/[\t ]+/,commentStart:{match:"/*",push:"comment"},lArrow:"<",rArrow:">",lCurly:"{",rCurly:"}",constToken:"#const",define:"#define",includeDrs:"#include_drs",ifToken:"if",elseifToken:"elseif",elseToken:"else",endifToken:"endif",startRandom:"start_random",percentChance:"percent_chance",endRandom:"end_random",int:/\-?[0-9]+\b/,identifier:/[^\s!@#\$%\^&\*\(\)\-\+=;:'"<>{}\[\]\?\/\\][^\s;'"<>{}\[\]\/\\]*/,invalid:{error:!0}},comment:{commentStart:{match:"/*",push:"comment"},commentText:{match:/(?:(?!\*\/|\/\*)[\s\S])+/,lineBreaks:!0},commentEnd:{match:"*/",pop:!0}}})});function O(e,a){return a?e.childrenByType[a]||[]:e.children}function T(e,a){let o=[];return j.has(e)?o=j.get(e)||[]:(e.children.forEach(s=>{o.push(s),J(s)&&o.push(...T(s))}),j.set(e,o)),a?o.filter(s=>s.type===a):o}function H(e,a){return T(e,a).filter(R)}function u(e,a,o){let s=H(e,a);if(s.length)return s[0];if(o)throw new Error(`Cannot find a token '${a||"<any>"}' in '${e.type}'!`)}function g(e,a,o){let s=H(e,a);if(s.length)return s[s.length-1];if(o)throw new Error(`Cannot find a token '${a||"<any>"}' in '${e.type}'!`)}function A(e,a){return O(e,a).filter(J)}function b(e,a,o){let s=A(e,a);if(s.length)return s[0];if(o)throw new Error(`Cannot find a node '${a||"<any>"}' of '${e.type}'!`)}function f(e,a){return T(e,a).filter(J)}function N(e,a,o){let s=f(e,a);if(s.length)return s[0];if(o)throw new Error(`Cannot find a node '${a||"<any>"}' of '${e.type}'!`)}function R(e){return!("children"in e)}function J(e){return"children"in e}var j,_=y(()=>{"use strict";j=new WeakMap});var me={};v(me,{check:()=>Qe});function Qe(e){let a=[],o=[],s=[];return[...f(e,"IfStatement"),...f(e,"ChanceStatement")].forEach(d=>{a.push(...le(d).map(t=>t.name))}),le(e).forEach(({name:d})=>{a.includes(d)||o.push(d)}),[...T(e,"IfStatement"),...T(e,"ElseIfStatement")].forEach(d=>{o.includes(d.condition)&&s.push(u(d,"identifier"))}),s.map(d=>({name:"LintError",message:`Condition '${d.value}' is always true.`,boundaries:$(d)}))}function le(e){return f(e,"DeclarationStatement").filter(a=>a.kind==="define")}var ce=y(()=>{"use strict";_();h()});var $e={};v($e,{check:()=>Ze});function Ze(e){let a=[];return f(e,"StatementsBlock").forEach(o=>{let s=[];A(o,"Attribute").forEach(c=>{(0,G.find)(s,d=>(0,G.isEqual)(d,c))?a.push(c):s.push(c)})}),a.map(o=>({name:"LintError",message:`Duplicate attribute '${o.name}'.`,boundaries:{start:$(u(o,void 0,!0)).start,end:$(g(o,void 0,!0)).end}}))}var G,de=y(()=>{"use strict";_();h();G=require("lodash")});var pe={};v(pe,{check:()=>Xe});function Xe(e){let a=[];return f(e,"StatementsBlock").forEach(o=>{let s=[];O(o,"Command").forEach(t=>{s.some(r=>(0,Z.isEqual)(r,t))?a.push([t,`Duplicate command '${t.name}' with exactly the same arguments and attibutes.`]):s.push(t)});let c=[];O(o,"ConditionalCommand").forEach(t=>{c.some(r=>(0,Z.isEqual)(r,t))?a.push([t,"Duplicate command with exactly the same alternatives, arguments, and attibutes."]):c.push(t)})}),a.map(([o,s])=>({name:"LintError",message:s,boundaries:{start:$(u(o)).start,end:$(g(o)).end}}))}var Z,ue=y(()=>{"use strict";Z=require("lodash");_();h()});var be={};v(be,{check:()=>en});function en(e){let a=[];return f(e,"IfStatement").forEach(s=>{s.elseStatements&&s.elseStatements.length===0&&a.push({name:"LintError",message:"Empty 'else'.",boundaries:{start:$(u(b(s,"Else",!0))).start,end:$(g(s,void 0,!0)).end}})}),a}var fe=y(()=>{"use strict";_();h()});var ye={};v(ye,{check:()=>nn});function nn(e){let a=[];return f(e,"SectionStatement").forEach(s=>{s.statements.length===0&&a.push({name:"LintError",message:`Empty section '${s.name}'.`,boundaries:{start:$(u(s)).start,end:$(g(s)).end}})}),a}var ve=y(()=>{"use strict";_();h()});var Ce={};v(Ce,{check:()=>an});function an(e){return f(e,"IncludeDrsStatement").map(a=>({name:"LintError",message:"Do not use 'include_drs' outside of internal game maps.",boundaries:{start:$(u(a)).start,end:$(g(a)).end}}))}var he=y(()=>{"use strict";_();h()});var ge={};v(ge,{check:()=>on});function on(e){let a=[];function o(t,r){return t&&t.length?t.reduce((m,E)=>({...m,...d(E,m)}),r):r}function s(t,r){let m=o(t.statements,r),E=t.elseifs?t.elseifs.map(x=>o(x.statements,r)).reduce((x,U)=>({...x,...U}),r):r,F=o(t.elseStatements,r);return{...m,...E,...F}}function i(t,r){return t.statements.filter(m=>m.type==="ChanceStatement").map(m=>o(m.statements,r)).reduce((m,E)=>({...m,...E}),r)}function c(t,r){let m=u(t,"identifier",!0);return r[m.value]?(a.push(m),r):{...r,[m.value]:!0}}function d(t,r){return t.type==="IfStatement"?s(t,r):t.type==="RandomStatement"?i(t,r):t.type==="DeclarationStatement"?c(t,r):"statements"in t?o(t.statements,r):r}return d(e,{}),a.map(t=>({name:"LintError",message:`${t.value} is already defined!`,boundaries:$(t)}))}var Ae=y(()=>{"use strict";_();h()});var _e={};v(_e,{check:()=>sn});function sn(e,a="always"){let o=g(e);return o&&o.type==="eol"&&o.value.endsWith(`
`)?a==="always"?[]:[{name:"LintError",message:"Newline not allowed at end of file.",boundaries:$(o)}]:a==="never"?[]:[{name:"LintError",message:"Newline required at end of file but not found.",boundaries:{start:$(o).end,end:$(o).end}}]}var Ee=y(()=>{"use strict";_();h()});var Le={};v(Le,{default:()=>ln});var ln,Ie=y(()=>{"use strict";ln={general:[{name:"DEATH_MATCH",description:"Deathmatch game type is selected."},{name:"REGICIDE",description:"Regicide game type is selected."},{name:"TINY_MAP",description:"Tiny map is selected, 120x120 tiles."},{name:"SMALL_MAP",description:"Small map is selected, 144x144 tiles."},{name:"MEDIUM_MAP",description:"Medium map is selected, 168x168 tiles."},{name:"LARGE_MAP",description:"Large map is selected, 200x200 tiles."},{name:"HUGE_MAP",description:"Huge map is selected, 220x220 tiles."},{name:"GIGANTIC_MAP",description:"Gigantic map is selected, 240x240 tiles."},{name:"FIXED_POSITIONS",description:'"Team Together" box is checked.'},{name:"HIGH_RESOURCES",description:"High resources."},{name:"MEDIUM_RESOURCES",description:"Medium resources."},{name:"LOW_RESOURCES",description:"Low resources."},{name:"DEFAULT_RESOURCES",description:"Default resources."}],terrains:[{name:"GRASS",value:0,description:"Grass terrain. Default."},{name:"WATER",value:1,description:"Water terrain."},{name:"BEACH",value:2,description:"Beach terrain. Automatically placed around coasts. Sailable. No buildings except walls and docks."},{name:"DIRT3",value:3,description:"Greenish dirt terrain."},{name:"SHALLOW",value:4,description:"Shallow terrain. Grassy water, sailable and walkable."},{name:"LEAVES",value:5,description:"Forest leaves terrain. Terrain left when temperate or tropical forest is chopped."},{name:"DIRT",value:6,description:"Dirt terrain. Includes some cactus objects."},{value:7,description:"Planted farms terrain. Not actual farms!"},{value:8,description:"Expired farms terrain. Not actual farms!"},{name:"GRASS3",value:9,description:"Brownish grass terrain."},{name:"FOREST",value:10,description:"Oak forest terrain."},{name:"DIRT2",value:11,description:"Dirt and grass mix terrain."},{name:"GRASS2",value:12,description:"Bright grass terrain."},{name:"PALM_DESERT",value:13,description:"Palm forest terrain. Leaves behind DESERT when chopped."},{name:"DESERT",value:14,description:"Desert terrain."},{value:15,description:"Water terrain. Like `WATER` but has no beaches. Not dockable."},{value:16,description:"Grass terrain. Looks like `GRASS`, automatically placed under cliffs."},{name:"JUNGLE",value:17,description:"Jungle forest terrain."},{name:"BAMBOO",value:18,description:"Bamboo forest terrain."},{name:"PINE_FOREST",value:19,description:"Pine forest terrain."},{name:"FOREST",value:20,description:'Oak forest terrain. Looks exactly like `FOREST` but the trees are called "Oak forest".'},{name:"SNOW_FOREST",value:21,description:"Snowy forest terrain. Leaves behind GRASS_SNOW when chopped."},{name:"DEEP_WATER",value:22,description:"Dark water terrain. Not dockable."},{name:"MED_WATER",value:23,description:"Darker water terrain. Not dockable."},{name:"ROAD",value:24,description:"Road terrain. You can't place gold, stone, berries on any type of road."},{name:"ROAD2",value:25,description:"Ruined road terrain. You can't place gold, stone, berries on any type of road."},{value:26,description:"Ice terrain. Like `ICE` but sailable."},{value:27,description:"Dirt and grass mix terrain with no beach. Like DIRT2 but has no sandy beaches, still dockable."},{value:28,description:"Water terrain.Like `WATER` but walkable and has no beaches. Not sailable."},{value:29,description:"Ploughed farms terrain. Not actual farms!"},{value:30,description:"Growing farms terrain. Not actual farms!"},{value:31,description:"Almost grown farms terrain. Not actual farms!"},{name:"SNOW",value:32,description:"Snow terrain."},{name:"DIRT_SNOW",value:33,description:"Snowy dirt terrain with icy beaches."},{name:"GRASS_SNOW",value:34,description:"Snowy grass terrain. Left behind when snowy forest is chopped."},{name:"ICE",value:35,description:"Ice terrain. Not sailable. No buildings."},{value:36,description:"Snowy dirt terrain with sandy beaches."},{value:37,description:"Icy beach terrain. Automatically placed around snowy coasts. Sailable. No buildings except walls and docks."},{value:38,description:"Snowy road terrain. You can't place gold, stone, berries on any type of road."},{value:39,description:"Grassy road terrain. You can't place gold, stone, berries on any type of road."},{value:40,description:"Road terrain. No buildings, used in King of the Hill game type around the relic. You can't place gold, stone, berries on any type of road."}],entities:[{name:"MILITIA",value:74,description:"Militia. Dark Age unit."},{name:"MAN_AT_ARMS",value:75,description:"Man-at-Arms. Feudal Age unit."},{name:"LONG_SWORDSMAN",value:77,description:"Long Swordsman. Castle Age unit."},{name:"TWO_HANDED_SWORDSMAN",value:473,description:"Two-Handed Swordsman. Imperial Age unit."},{name:"CHAMPION",value:567,description:"Champion. Imperial Age unit."},{name:"SPEARMAN",value:93,description:"Spearman. Feudal Age unit."},{name:"PIKEMAN",value:358,description:"Pikeman. Castle Age unit."},{name:"HALBERDIER",value:359,description:"Halberdier. Imperial Age unit."},{name:"EAGLE_WARRIOR",value:751,description:"Eagle Warrior. Castle Age unit."},{name:"ELITE_EAGLE_WARRIOR",value:752,description:"Elite Eagle Warrior. Imperial Age unit."},{name:"ARCHER",value:4,description:"Archer. Feudal Age unit."},{name:"CROSSBOWMAN",value:24,description:"Crossbowman. Castle Age unit."},{name:"ARBALEST",value:492,description:"Arbalest. Imperial Age unit."},{name:"SKIRMISHER",value:7,description:"Skirmisher. Feudal Age unit."},{name:"ELITE_SKIRMISHER",value:6,description:"Elite Skirmisher. Castle Age unit."},{name:"HAND_CANNONEER",value:5,description:"Hand Cannoneer. Imperial Age unit."},{name:"CAVALRY_ARCHER",value:39,description:"Cavalry Archer. Castle Age unit."},{name:"HEAVY_CAVALRY_ARCHER",value:474,description:"Heavy Cavalry Archer. Imperial Age unit."},{name:"SCOUT",value:448,description:"Scout. Feudal Age unit. Automatically replaced by an Eagle Warrior for Mesoamerican civilizations."},{name:"SCOUT_CAVALRY",value:448,description:"Scout. Feudal Age unit. Automatically replaced by an Eagle Warrior for Mesoamerican civilizations."},{name:"LIGHT_CAVALRY",value:546,description:"Light Cavalry. Castle Age unit."},{name:"HUSSAR",value:441,description:"Hussar. Imperial Age unit."},{name:"KNIGHT",value:38,description:"Knight. Castle Age unit."},{name:"CAVALIER",value:283,description:"Cavalier. Imperial Age unit."},{name:"PALADIN",value:569,description:"Paladin. Imperial Age unit."},{name:"CAMEL",value:329,description:"Camel. Castle Age unit."},{name:"HEAVY_CAMEL",value:330,description:"Heavy Camel. Imperial Age unit."},{name:"BATTERING_RAM",value:35,description:"Battering Ram. Castle Age unit."},{name:"CAPPED_RAM",value:422,description:"Capped Ram. Imperial Age unit."},{name:"SIEGE_RAM",value:548,description:"Siege Onager. Imperial Age unit."},{name:"SCORPION",value:279,description:"Scorpion. Castle Age unit."},{name:"HEAVY_SCORPION",value:542,description:"Heavy Scorpion. Imperial Age unit."},{name:"BOMBARD_CANNON",value:36,description:"Bombard Cannon. Imperial Age unit."},{name:"MANGONEL",value:280,description:"Mangonel. Castle Age unit."},{name:"ONAGER",value:550,description:"Onager. Imperial Age unit."},{name:"SIEGE_ONAGER",value:588,description:"Siege Onager. Imperial Age unit."},{name:"FISHING_SHIP",value:13,description:"Fishing Ship. Dark Age unit."},{name:"TRADE_COG",value:17,description:"Trade Cog. Feudal Age unit."},{name:"TRANSPORT_SHIP",value:545,description:"Transport Ship. Feudal Age unit."},{name:"GALLEY",value:539,description:"Galley. Feudal Age unit."},{name:"WAR_GALLEY",value:21,description:"War Galley. Castle Age unit."},{name:"GALLEON",value:442,description:"Galleon. Imperial Age unit."},{name:"FIRE_SHIP",value:529,description:"Fire Ship. Castle Age unit."},{name:"FAST_FIRE_SHIP",value:532,description:"Fast Fire Ship. Imperial Age unit."},{name:"CANNON_GALLEON",value:420,description:"Cannon Galleon. Imperial Age unit."},{name:"ELITE_CANNON_GALLEON",value:691,description:"Elite Cannon Galleon. Imperial Age unit."},{name:"DEMOLITION_SHIP",value:527,description:"Demolition Ship. Castle Age unit."},{name:"HEAVY_DEMOLITION_SHIP",value:528,description:"Heavy Demolition Ship. Imperial Age unit."},{name:"LONGBOAT",value:250,description:"Longboat. Castle Age unit."},{name:"ELITE_LONGBOAT",value:533,description:"Elite Longboat. Imperial Age unit."},{name:"TURTLE_SHIP",value:831,description:"Turtle Ship. Castle Age unit."},{name:"ELITE_TURTLE_SHIP",value:832,description:"Elite Turtle Ship. Imperial Age unit."},{name:"TREBUCHET",value:42,description:"Trebuched, unpacked version. Imperial Age unit. See also: `TREBUCHET_PACKED`."},{name:"TREBUCHET_PACKED",value:331,description:"Trebuched, packed version. Imperial Age unit. See also: `TREBUCHET`."},{name:"PETARD",value:440,description:"Petard. Castle Age unit."},{name:"BERSERK",value:692,description:"Berserk. Castle Age unit."},{name:"ELITE_BERSERK",value:694,description:"Elite Berserk. Imperial Age unit."},{name:"CATAPHRACT",value:40,description:"Cataphract. Castle Age unit."},{name:"ELITE_CATAPHRACT",value:553,description:"Elite Cataphract. Imperial Age unit."},{name:"CHU_KO_NU",value:73,description:"Chu Ko Nu. Castle Age unit."},{name:"ELITE_CHU_KO_NU",value:559,description:"Elite Chu Ko Nu. Imperial Age unit."},{name:"CONQUISTADOR",value:771,description:"Conquistador. Castle Age unit."},{name:"ELITE_CONQUISTADOR",value:773,description:"Elite Conquistador. Imperial Age unit."},{name:"HUSKARL",value:41,description:"Huskarl. Castle Age unit."},{name:"ELITE_HUSKARL",value:555,description:"Elite Huskarl. Imperial Age unit."},{name:"JAGUAR_WARRIOR",value:725,description:"Jaguar Warrior. Castle Age unit."},{name:"ELITE_JAGUAR_WARRIOR",value:726,description:"Elite Jaguar Warrior. Imperial Age unit."},{name:"JANISSARY",value:46,description:"Janissary. Castle Age unit."},{name:"ELITE_JANISSARY",value:557,description:"Elite Janissary. Imperial Age unit."},{name:"LONGBOWMAN",value:8,description:"Longbowman. Castle Age unit."},{name:"ELITE_LONGBOWMAN",value:530,description:"Elite Longbowman. Imperial Age unit."},{name:"MAMELUKE",value:282,description:"Mameluke. Castle Age unit."},{name:"ELITE_MAMELUKE",value:556,description:"Elite Mameluke. Imperial Age unit."},{name:"MANGUDAI",value:11,description:"Mangudai. Castle Age unit."},{name:"ELITE_MANGUDAI",value:561,description:"Elite Mangudai. Imperial Age unit."},{name:"PLUMED_ARCHER",value:763,description:"Plumed Archer. Castle Age unit."},{name:"ELITE_PLUMED_ARCHER",value:765,description:"Elite Plumed Archer. Imperial Age unit."},{name:"SAMURAI",value:291,description:"Samurai. Castle Age unit."},{name:"ELITE_SAMURAI",value:560,description:"Elite Samurai. Imperial Age unit."},{name:"TARKAN",value:755,description:"Tarkan. Castle Age unit."},{name:"ELITE_TARKAN",value:757,description:"Elite Tarkan. Imperial Age unit."},{name:"TEUTONIC_KNIGHT",value:25,description:"Teutonic Knight. Castle Age unit."},{name:"ELITE_TEUTONIC_KNIGHT",value:554,description:"Elite Teutonic Knight. Imperial Age unit."},{name:"THROWING_AXEMAN",value:281,description:"Throwing Axeman. Castle Age unit."},{name:"ELITE_THROWING_AXEMAN",value:531,description:"Elite Throwing Axeman. Imperial Age unit."},{name:"WAR_ELEPHANT",value:239,description:"War Elephant. Castle Age unit."},{name:"ELITE_WAR_ELEPHANT",value:558,description:"Elite War Elephant. Imperial Age unit."},{name:"WAR_WAGON",value:827,description:"War Wagon. Castle Age unit."},{name:"ELITE_WAR_WAGON",value:829,description:"Elite War Wagon. Imperial Age unit."},{name:"WOAD_RAIDER",value:232,description:"Woad Raider. Castle Age unit."},{name:"ELITE_WOAD_RAIDER",value:534,description:"Elite Woad Raider. Imperial Age unit."},{name:"MONK",value:125,description:"Monk. Castle Age unit."},{name:"MISSIONARY",value:775,description:"Missionary. Castle Age unit."},{name:"KING",value:434,description:"King. Must be manually placed for Regicide game type to work. See also: `REGICIDE`."},{name:"TRADE_CART",value:128,description:"Trade Cart. Feudal Age unit."},{value:204,description:"Trade Cart, full. Not actually carrying gold. Feudal Age unit."},{name:"VILLAGER",description:"Villager. If you don't set `number_of_objects`, the game will automatically place 3 villagers, 6 for Chinese, 4 for Mayas."},{value:293,description:"Female villager."},{value:83,description:"Male villager."},{value:212,description:"Female builder villager."},{value:118,description:"Male builder villager."},{value:214,description:"Female farmer villager."},{value:259,description:"Male farmer villager."},{value:57,description:"Female fisher villager."},{value:56,description:"Male fisher villager."},{value:354,description:"Female gatherer villager."},{value:120,description:"Male gatherer villager."},{value:581,description:"Female miner villager."},{value:579,description:"Male miner villager."},{value:216,description:"Female hunter villager."},{value:122,description:"Male hunter villager."},{value:218,description:"Female chopper villager."},{value:123,description:"Male chopper villager."},{value:590,description:"Female shepherd villager."},{value:592,description:"Male shepherd villager."},{name:"ADMIRAL_YI_SUN_SHIN",value:844,description:"ADMIRAL_YI_SUN_SHIN. Hero unit."},{name:"AETHELFIRTH",value:169,description:"AETHELFIRTH. Hero unit."},{value:197,description:"Alexander Nevski. Hero unit."},{name:"ARCHBISHOP",value:177,description:"ARCHBISHOP. Hero unit."},{name:"ARCHERS_OF_THE_EYES",value:686,description:"ARCHERS_OF_THE_EYES. Hero unit."},{name:"ATTILA_THE_HUN",value:777,description:"ATTILA_THE_HUN. Hero unit."},{name:"BAD_NEIGHBOR",value:682,description:"BAD_NEIGHBOR. Hero unit."},{name:"BAD_NEIGHBOR_PACKED",value:730,description:"BAD_NEIGHBOR_PACKED. Hero unit."},{name:"BELISARIUS",value:167,description:"BELISARIUS. Hero unit."},{name:"CHARLEMAGNE",value:165,description:"CHARLEMAGNE. Hero unit."},{name:"CHARLES_MARTEL",value:424,description:"CHARLES_MARTEL. Hero unit."},{name:"CONSTABLE_RICHEMONT",value:646,description:"CONSTABLE_RICHEMONT. Hero unit."},{name:"DUKE_D_ALENCON",value:638,description:"DUKE_D_ALENCON. Hero unit."},{name:"EL_CID",value:198,description:"EL_CID. Hero unit."},{name:"EL_CID_CAMPEADOR",value:824,description:"EL_CID_CAMPEADOR. Hero unit."},{name:"EMPEROR_IN_A_BARREL",value:733,description:"EMPEROR_IN_A_BARREL. Hero unit."},{name:"ERIK_THE_RED",value:171,description:"ERIK_THE_RED. Hero unit."},{name:"FRANKISH_PALADIN",value:632,description:"FRANKISH_PALADIN. Hero unit."},{name:"FRIAR_TUCK",value:163,description:"FRIAR_TUCK. Hero unit."},{name:"GAWAIN",value:175,description:"GAWAIN. Hero unit."},{name:"GENGHIS_KHAN",value:731,description:"GENGHIS_KHAN. Hero unit."},{name:"GODS_OWN_SLING",value:683,description:"GODS_OWN_SLING. Hero unit."},{name:"GODS_OWN_SLING_PACKED",value:729,description:"GODS_OWN_SLING_PACKED. Hero unit."},{name:"GUY_JOSSELYNE",value:648,description:"GUY_JOSSELYNE. Hero unit."},{name:"HENRY_V",value:847,description:"HENRY_V. Hero unit."},{name:"HROLF_THE_GANGER",value:428,description:"HROLF_THE_GANGER. Hero unit."},{name:"HUNTING_WOLF",value:700,description:"HUNTING_WOLF. Hero unit."},{name:"IMAM",value:842,description:"IMAM. Hero unit."},{name:"JEAN_BUREAU",value:650,description:"JEAN_BUREAU. Hero unit."},{name:"JEAN_DE_LORRAIN",value:644,description:"JEAN_DE_LORRAIN. Hero unit."},{name:"JOAN_OF_ARC",value:629,description:"JOAN_OF_ARC. Hero unit."},{name:"JOAN_THE_MAID",value:430,description:"JOAN_THE_MAID. Hero unit."},{name:"KING_ALFONSO",value:840,description:"KING_ALFONSO. Hero unit."},{name:"KING_ARTHUR",value:173,description:"KING_ARTHUR. Hero unit."},{name:"KING_SANCHO",value:838,description:"KING_SANCHO. Hero unit."},{name:"KITABATAKE",value:195,description:"KITABATAKE. Hero unit."},{name:"KUSHLUK",value:702,description:"KUSHLUK. Hero unit."},{name:"LA_HIRE",value:640,description:"LA_HIRE. Hero unit."},{name:"LANCELOT",value:174,description:"LANCELOT. Hero unit."},{name:"LORD_DE_GRAVILLE",value:642,description:"LORD_DE_GRAVILLE. Hero unit."},{name:"MASTER_OF_THE_TEMPLAR",value:680,description:"MASTER_OF_THE_TEMPLAR. Hero unit."},{name:"MINAMOTO",value:196,description:"MINAMOTO. Hero unit."},{name:"MORDRED",value:176,description:"MORDRED. Hero unit."},{name:"NOBUNAGA",value:845,description:"NOBUNAGA. Hero unit."},{name:"ORNLU_THE_WOLF",value:707,description:"ORNLU_THE_WOLF. Hero unit."},{name:"POPE_LEO_I",value:781,description:"POPE_LEO_I. Hero unit."},{name:"REYNALD_DE_CHATILLON",value:678,description:"REYNALD_DE_CHATILLON. Hero unit."},{name:"RICHARD_THE_LIONHARTED",value:160,description:"RICHARD_THE_LIONHARTED. Hero unit."},{name:"ROBIN_HOOD",value:200,description:"ROBIN_HOOD. Hero unit."},{name:"ROLAND",value:166,description:"ROLAND. Hero unit."},{name:"SCYTHIAN_SCOUT",value:852,description:"SCYTHIAN_SCOUT. Hero unit."},{name:"SCYTHIAN_WILD_WOMAN",value:783,description:"SCYTHIAN_WILD_WOMAN. Hero unit."},{name:"SHAH",value:704,description:"SHAH. Hero unit."},{name:"SHERIFF_OF_NOTTINGHAM",value:164,description:"SHERIFF_OF_NOTTINGHAM. Hero unit."},{name:"SIEGFRIED",value:170,description:"SIEGFRIED. Hero unit."},{name:"SIEUR_BERTRAND",value:636,description:"SIEUR_BERTRAND. Hero unit."},{name:"SIEUR_DE_METZ",value:634,description:"SIEUR_DE_METZ. Hero unit."},{name:"SIR_JOHN_FASTOLF",value:652,description:"SIR_JOHN_FASTOLF. Hero unit."},{name:"SUBOTAI",value:698,description:"SUBOTAI. Hero unit."},{name:"TAMERLANE",value:172,description:"TAMERLANE. Hero unit."},{name:"THE_BLACK_PRINCE",value:161,description:"THE_BLACK_PRINCE. Hero unit."},{name:"THEODORIC_THE_GOTH",value:168,description:"THEODORIC_THE_GOTH. Hero unit."},{name:"WILLIAM_THE_CONQUEROR",value:849,description:"WILLIAM_THE_CONQUEROR. Hero unit."},{name:"WILLIAM_WALLACE",value:432,description:"WILLIAM_WALLACE. Hero unit."},{value:748,description:"Cobra car. Cheat unit."},{value:860,description:"Furious the monkey boy. Cheat unit."},{value:862,description:"Stormy dog. Cheat unit."},{value:152,description:"Dead Militia."},{value:157,description:"Dead Man at Arms."},{value:180,description:"Dead Long Swordsman."},{value:568,description:"Dead Two Handed Swordsman."},{value:151,description:"Dead Champion."},{value:100,description:"Dead Spearman."},{value:501,description:"Dead Pikeman."},{value:754,description:"Dead Eagle Warrior."},{value:98,description:"Dead Unrecognized infantry."},{value:750,description:"Dead Unrecognized infantry."},{value:22,description:"Dead Unrecognized infantry."},{value:99,description:"Dead Unrecognized infantry."},{value:3,description:"Dead Archer."},{value:26,description:"Dead Crossbowman."},{value:687,description:"Dead Arbalest."},{value:238,description:"Dead Skirmisher."},{value:34,description:"Dead Cavalry Archer."},{value:547,description:"Dead Light Cavalry."},{value:111,description:"Dead Knight."},{value:139,description:"Dead Cavalier."},{value:570,description:"Dead Paladin."},{value:494,description:"Dead Camel."},{value:113,description:"Dead Heavy Camel."},{value:135,description:"Dead Unrecognized cavalry."},{value:675,description:"Dead Mangonel."},{value:121,description:"Dead Onager."},{value:589,description:"Dead Siege Onager."},{value:23,description:"Dead Battering Ram."},{value:423,description:"Dead Capped Ram."},{value:549,description:"Dead Siege Ram."},{value:149,description:"Dead Scorpion."},{value:16,description:"Dead Bombard Cannon."},{value:735,description:"Dead Trebuchet, packed."},{value:194,description:"Dead Trebuchet, unpacked."},{value:693,description:"Dead Berserk."},{value:480,description:"Dead Tarkan."},{value:181,description:"Dead Teutonic Knight."},{value:154,description:"Dead Throwing Axeman."},{value:27,description:"Dead Cataphract."},{value:772,description:"Dead Conquistador."},{value:62,description:"Dead Huskarl."},{value:44,description:"Dead Mameluke."},{value:828,description:"Dead War Wagon."},{value:764,description:"Dead Plumed Archer."},{value:136,description:"Dead War Elephant."},{value:233,description:"Dead Woad Raider."},{value:134,description:"Dead Monk."},{value:776,description:"Dead Missionary."},{value:839,description:"Dead King."},{value:178,description:"Dead Trade Cart."},{value:205,description:"Dead Trade Cart, full."},{value:60,description:"Dead Villager, woman."},{value:213,description:"Dead Villager, woman, builder."},{value:215,description:"Dead Villager, woman, farmer."},{value:355,description:"Dead Villager, woman, forager."},{value:582,description:"Dead Villager, woman, miner."},{value:217,description:"Dead Villager, woman, hunter."},{value:219,description:"Dead Villager, woman, lumberjack."},{value:591,description:"Dead Villager, woman, shepherd."},{value:58,description:"Dead Villager, man."},{value:230,description:"Dead Villager, man, builder."},{value:228,description:"Dead Villager, man, farmer."},{value:353,description:"Dead Villager, man, forager."},{value:229,description:"Dead Villager, man, miner."},{value:227,description:"Dead Villager, man, hunter."},{value:226,description:"Dead Villager, man, shepherd."},{value:630,description:"Dead Joan of Arc."},{value:431,description:"Dead Joan the Maid."},{value:633,description:"Dead Knight with Lance."},{value:595,description:"Dead Sheep (no food)."},{value:356,description:"Dead Boar (no food)."},{value:43,description:"Dead Deer (no food)."},{value:815,description:"Dead Horse."},{value:813,description:"Dead Jaguar."},{value:237,description:"Dead Wolf."},{name:"ARCHERY_RANGE",value:87,description:"Archery Range. Feudal Age building."},{name:"BARRACKS",value:12,description:"Barracks. Dark Age building."},{name:"BLACKSMITH",value:103,description:"Blacksmith. Feudal Age building."},{name:"BOMBARD_TOWER",value:236,description:"Bombard Tower. Imperial Age building."},{name:"CASTLE",value:82,description:"Castle. Castle Age building."},{name:"DOCK",value:45,description:"Dock. Dark Age building."},{name:"FARM",value:50,description:"Farm. Dark Age building."},{name:"FISH_TRAP",value:199,description:"Fish Trap. Feudal Age building."},{name:"GUARD_TOWER",value:234,description:"Guard Tower. Castle Age building."},{name:"HOUSE",value:70,description:"House. Dark Age building."},{name:"KEEP",value:235,description:"Keep. Imperial Age building."},{name:"LUMBER_CAMP",value:562,description:"Lumber Camp. Dark Age building."},{name:"MARKET",value:84,description:"Market. Feudal Age building."},{name:"MILL",value:68,description:"Mill. Dark Age building."},{name:"MINING_CAMP",value:584,description:"Mining Camp. Dark Age building."},{name:"MONASTERY",value:104,description:"Monastery. Castle Age building."},{name:"OUTPOST",value:598,description:"Outpost. Dark Age building."},{name:"SIEGE_WORKSHOP",value:49,description:"Siege Workshop. Castle Age building."},{name:"STABLE",value:86,description:"Stable. Feudal Age building."},{name:"TOWN_CENTER",value:109,description:"Town Center. Dark Age building."},{name:"UNIVERSITY",value:209,description:"University. Castle Age building."},{name:"WATCH_TOWER",value:79,description:"Watch Tower. Feudal Age building."},{name:"WONDER",value:276,description:"Wonder. Imperial Age building."},{name:"PALISADE_WALL",value:72,description:"Palisade Wall. Dark Age building. Automatically placed in rings around players with four gates (one per side, stone gates in AoC) if `set_place_for_every_player` is used."},{name:"WALL",value:117,description:"Stone Wall. Feudal Age building. Automatically placed in rings around players with four gates (one per side) if `set_place_for_every_player` is used."},{name:"STONE_WALL",value:117,description:"Stone Wall. Feudal Age building. Automatically placed in rings around players with four gates (one per side) if `set_place_for_every_player` is used."},{name:"FORTIFIED_WALL",value:155,description:"Fortified Wall. Imperial Age building."},{value:64,description:"Gate, SW-NE."},{value:88,description:"Gate, SE-NW."},{value:659,description:"Gate, horizontal."},{value:667,description:"Gate, vertical."},{value:63,description:"Fortified gate, SW-NE. Only central part actually looks like a fortified gate."},{value:85,description:"Fortified gate, SE-NW. Only central part actually looks like a fortified gate."},{value:660,description:"Fortified gate, horizontal. Only central part actually looks like a fortified gate."},{value:668,description:"Fortified gate, vertical. Only central part actually looks like a fortified gate."},{value:463,description:"House, Feudal Age style."},{value:464,description:"House, Castle Age style."},{value:71,description:"Town, not working center, no. Can garrison, fire arrows, and support pop. Graphics aren't perfect."},{value:563,description:"Lumber camp, not working."},{value:585,description:"Mining camp, not working."},{value:129,description:"Mill, not working. Feudal Age style."},{value:130,description:"Mill, not working. Castle Age style."},{value:116,description:"Market, not working. Castle Age style."},{value:137,description:"Market, not working. Imperial Age style."},{value:498,description:"Barracks, not working. Feudal Age style."},{value:20,description:"Barracks, not working. Castle Age style."},{value:10,description:"Archery range, not working. Castle Age style."},{value:101,description:"Stable, not working. Castle Age style."},{value:105,description:"Blacksmith, not working. Feudal Age style."},{value:18,description:"Blacksmith, not working. Castle Age style."},{value:33,description:"Castle, not working. Does nothing, but can garrison 75 units (they don't shoot)."},{value:133,description:"Dock, not working. Feudal Age style."},{value:47,description:"Dock, not working. Castle Age style."},{value:446,description:"Dock, not working. Castle Age style. Has special graphics for East-European and American civs. Slightly different for others."},{value:30,description:"Monastery, not working."},{value:150,description:"Siege workshop, not working."},{value:210,description:"University, not working. Imperial Age style."},{name:"YURT",value:712,description:"Big wooden hut. Works as a house, has 500 HP."},{name:"YURT2",value:713,description:"Small wooden hut. Works as a house, has 500 HP."},{name:"YURT3",value:714,description:"Small wooden hut. Works as a house, has 500 HP."},{name:"YURT4",value:715,description:"Small wooden hut. Works as a house, has 500 HP."},{name:"YURT5",value:716,description:"Small leather hut. Works as a house, has 500 HP."},{name:"YURT6",value:717,description:"Small leather hut. Works as a house, has 500 HP."},{name:"YURT7",value:718,description:"Small leather hut. Works as a house, has 500 HP."},{name:"YURT8",value:719,description:"Big leather hut. Works as a house, has 500 HP."},{name:"THE_ACCURSED_TOWER",value:684,description:"The Accursed Tower. Powerful guard tower, similar to west-European ones. Great range."},{name:"THE_TOWER_OF_FLIES",value:685,description:"The Tower of Flies. Powerful guard tower, similar to west-European ones."},{name:"TRADE_WORKSHOP",value:110,description:"Trade Workshop. Does nothing."},{name:"MONUMENT",value:826,description:"Same as a wonder, but doesn't let you win."},{name:"MOSQUE",value:655,description:"Does nothing. Looks exactly as the Turkish wonder."},{name:"PAVILION",value:624,description:"Big tent. Works as a house, has 500 HP."},{name:"PAVILION2",value:626,description:"Small tent. Works as a house, has 500 HP."},{name:"PAVILION3",value:625,description:"Small tent. Works as a house, has 500 HP."},{name:"CATHEDRAL",value:599,description:"Cathedral. Does nothing. Looks like British wonder, but bigger."},{name:"DOME_OF_THE_ROCK",value:690,description:"Dome of the Rock. Does nothing. Great Middle-Eastern temple."},{name:"GREAT_PYRAMID",value:696,description:"Great Pyramid. Does nothing."},{name:"PYRAMID",value:689,description:"Pyramid. Does nothing."},{value:81,description:"Wall, corner, with HP and icon of a fortified gate. Placed as a normal object, not in rings as `WALL`."},{value:80,description:"Fortified wall, corner, with HP and icon of a fortified gate. Placed as a normal object, not in rings as `FORTIFIED_WALL`."},{value:605,description:"Bridge, SW-NE, top end."},{value:606,description:"Bridge, SW-NE, middle."},{value:607,description:"Bridge, SW-NE, bottom end."},{value:738,description:"Bridge, SW-NE, middle broken."},{value:739,description:"Bridge, SW-NE, top end broken."},{value:740,description:"Bridge, SW-NE, bottom end broken."},{value:608,description:"Bridge, SE-NW, top end."},{value:609,description:"Bridge, SE-NW, middle."},{value:610,description:"Bridge, SE-NW, bottom end."},{value:741,description:"Bridge, SE-NW, middle broken."},{value:742,description:"Bridge, SE-NW, top end broken."},{value:743,description:"Bridge, SE-NW, bottom end broken."},{name:"SHEEP",value:594,description:"Sheep. May be placed as a player object."},{name:"TURKEY",value:833,description:"Turkey. May be placed as a player object."},{name:"BOAR",value:48,description:"Boar."},{name:"DEER",value:65,description:"Deer."},{name:"HORSE",value:814,description:"Horse."},{value:333,description:"Deer. Like `DEER` but not huntable."},{name:"DIRE_WOLF",value:89,description:"Dire Wolf. A wolf with 100 HP and low attack. Not so dire, AI has trouble with these wolves."},{name:"DORADO",value:455,description:"Dorado deep fish."},{name:"FISH_DORADO",value:455,description:"Dorado deep fish."},{name:"FISH",value:53,description:"Perch deep fish. Has 200 food like shore fish."},{name:"HAWK",value:96,description:"Hawk."},{name:"IRON_BOAR",value:810,description:"Iron Boar."},{name:"JAGUAR",value:812,description:"Jaguar."},{name:"JAVELINA",value:822,description:"Javelina."},{name:"MACAW",value:816,description:"Macaw."},{name:"MARLIN1",value:450,description:"Marlin deep fish."},{name:"GREAT_FISH_MARLIN",value:450,description:"Marlin deep fish."},{name:"MARLIN2",value:451,description:"Marlin deep fish."},{name:"GREAT_FISH_MARLIN2",value:451,description:"Marlin deep fish."},{name:"RABID_WOLF",value:202,description:"Rabid Wolf."},{name:"SALMON",value:456,description:"Salmon deep fish."},{name:"FISH_SALMON",value:456,description:"Salmon deep fish."},{name:"SNAPPER",value:458,description:"Snapper deep fish."},{name:"FISH_SNAPPER",value:458,description:"Snapper deep fish."},{name:"SHORE_FISH",value:69,description:"Shore fish."},{name:"TUNA",value:457,description:"Tuna deep fish."},{name:"FISH_TUNA",value:457,description:"Tuna deep fish."},{name:"WILD_HORSE",value:835,description:"Wild Horse. Use `HORSE` for a player-controlled horse."},{name:"WOLF",value:126,description:"Wolf."},{name:"BAMBOO_TREE",value:348,description:"Bamboo tree. Varies. Same as created by `BAMBOO` terrain."},{name:"BAMBOO_FOREST_TREE",value:348,description:"Bamboo tree. Varies. Same as created by `BAMBOO` terrain."},{name:"JUNGLETREE",value:414,description:"Jungle tree. Varies. Same as created by `JUNGLE` terrain."},{name:"JUNGLE_TREE",value:414,description:"Jungle tree. Varies. Same as created by `JUNGLE` terrain."},{name:"OAKTREE",value:349,description:"Oak tree. Varies. Same as created by `FOREST` terrain."},{name:"FOREST_TREE",value:349,description:"Oak tree. Varies. Same as created by `FOREST` terrain."},{name:"OAK_FOREST_TREE",value:349,description:"Oak tree. Varies. Same as created by `FOREST` terrain."},{name:"PALMTREE",value:351,description:"Palm tree. Varies. Same as created by `PALM_DESERT` terrain."},{name:"PALM_FOREST_TREE",value:351,description:"Palm tree. Varies. Same as created by `PALM_DESERT` terrain."},{name:"PINETREE",value:350,description:"Pine tree. Varies. Same as created by `PINE_FOREST` terrain."},{name:"PINE_FOREST_TREE",value:350,description:"Pine tree. Varies. Same as created by `PINE_FOREST` terrain."},{name:"SNOWPINETREE",value:413,description:"Snow pine tree. Varies. Same as created by `SNOW_FOREST` terrain."},{name:"SNOW_PINE_TREE",value:413,description:"Snow pine tree. Varies. Same as created by `SNOW_FOREST` terrain."},{name:"TREE_A",value:399,description:"Oak tree. Always the same."},{name:"TREE1",value:399,description:"Oak tree. Always the same."},{name:"TREE_TD",value:399,description:"Oak tree. Always the same."},{name:"TREE_B",value:400,description:"Oak tree. Always the same."},{name:"TREE2",value:400,description:"Oak tree. Always the same."},{name:"TREE_C",value:401,description:"Oak tree. Always the same."},{name:"TREE3",value:401,description:"Oak tree. Always the same."},{name:"TREE_D",value:402,description:"Oak tree. Always the same."},{name:"TREE4",value:402,description:"Oak tree. Always the same."},{name:"TREE_E",value:403,description:"Oak tree. Always the same."},{name:"TREE5",value:403,description:"Oak tree. Always the same."},{name:"TREE_F",value:404,description:"Dry tree, no leaves. Always the same."},{name:"TREE_G",value:405,description:"Tree with brown leaves. Always the same."},{name:"TREE_H",value:406,description:"Oak tree. Always the same."},{name:"TREE_I",value:407,description:"Dry tree, no leaves. Always the same."},{name:"TREE_J",value:408,description:"Oak tree. Always the same."},{name:"TREE_K",value:409,description:"Oak tree. Always the same."},{name:"TREE_L",value:410,description:"Oak tree. Always the same."},{name:"RELIC",value:285,description:"Relic."},{value:287,description:"British relic. Becomes a normal relic when brought to a monastery."},{value:288,description:"Byzantine relic. Becomes a normal relic when brought to a monastery."},{value:289,description:"Chinese relic. Becomes a normal relic when brought to a monastery."},{value:290,description:"Frankish relic. Becomes a normal relic when brought to a monastery."},{value:292,description:"Gothic relic. Becomes a normal relic when brought to a monastery."},{value:294,description:"Japanese relic. Becomes a normal relic when brought to a monastery."},{value:295,description:"Persian relic. Becomes a normal relic when brought to a monastery."},{value:296,description:"Saracen relic. Becomes a normal relic when brought to a monastery."},{value:297,description:"Teutonic relic. Becomes a normal relic when brought to a monastery."},{value:298,description:"Turkish relic. Becomes a normal relic when brought to a monastery."},{name:"ES_FLAG",value:851,description:"Ensemble Studios flag."},{name:"FLAG_A",value:600,description:"Tall flag."},{name:"FLAG_B",value:601,description:"Bifurcate flag."},{name:"FLAG_C",value:602,description:"Spotted flag."},{name:"FLAG_D",value:603,description:"Crossed flag."},{name:"FLAG_E",value:604,description:"Binged flag."},{value:299,description:"Infiltrator. Looks exactly as a Militia, but stronger."},{name:"MAP_REVEALER",value:837,description:"Map Revealer. Invisible and immobile. Gives sight of 4 tiles radius area."},{value:536,description:"Converter Galley. A galley that converts enemies like a monk."},{name:"SABOTEUR",value:706,description:"Saboteur. Like `PETARD` but stronger."},{name:"Shipwreck",value:436,description:"Shipwreck. Can't move unless in group. Counts as 4 population."},{value:571,description:"Super armored Archer. Armor 1000, attack 1."},{value:577,description:"Super armored Cavalry Archer. Armor 1000, attack 1."},{value:575,description:"Super armored Light Cavalry. Armor 1000, attack 1."},{value:573,description:"Super armored Militia. Armor 1000, attack 1."},{name:"TORCH",value:499,description:"Torch. Can be placed even on water and forests."},{name:"TORCH_CONVERTING",value:854,description:"Torch. Like `TORCH` but rescuable like sheep."},{name:"Arrow",value:315,description:"Arrow lying on ground or water. Varies."},{name:"Arrows",value:54,description:"Arrows lying on ground or water. Varies."},{name:"BROKEN_CART",value:858,description:"Broken trade cart."},{name:"CACTUS",value:709,description:"Cactus. Varies."},{value:749,description:"Cobra car, not working."},{value:273,description:"Small cliff."},{name:"CRACKS",value:241,description:"Cracks."},{name:"CRATER",value:723,description:"Small crater."},{name:"EXPIRED_FISHTRAP",value:278,description:"Fish Trap, expired. Can be on land. Disappears quickly."},{name:"FLOWER_BED",value:859,description:"Flower bed."},{name:"FLOWERS_1",value:334,description:"Flowers. Can overlap with water and other stuff."},{name:"FLOWERS_2",value:335,description:"Flowers. Can overlap with water and other stuff."},{name:"FLOWERS_3",value:336,description:"Flowers. Can overlap with water and other stuff."},{name:"FLOWERS_4",value:337,description:"Flowers. Can overlap with water and other stuff."},{name:"FORAGE,",value:59,description:"Forage bush. Varies."},{name:"FORAGE_BUSH",value:59,description:"Forage bush. Varies."},{name:"GOLD",value:66,description:"Gold mine. Varies."},{name:"STONE",value:102,description:"Stone mine. Varies."},{name:"GRAVE",value:820,description:"Grave. Varies."},{name:"HAY_STACK",value:857,description:"Haystack."},{name:"HEAD",value:821,description:"Pole with a human head."},{name:"MOUNTAIN_1",value:310,description:"Grassy mountain. Not walkable."},{name:"MOUNTAIN1",value:310,description:"Grassy mountain. Not walkable."},{name:"MOUNTAIN_2",value:311,description:"Grassy mountain. Not walkable."},{name:"MOUNTAIN2",value:311,description:"Grassy mountain. Not walkable."},{name:"MOUNTAIN_3",value:744,description:"Rocky mountain. Not walkable."},{name:"MOUNTAIN_4",value:745,description:"Rocky mountain. Not walkable."},{name:"NINE_BANDS",value:720,description:"Nine Bands. Pole with horn decorations."},{name:"OLD_STONE_HEAD",value:855,description:"Old stone head. Pre-Columbian sculpture. Varies."},{name:"Outlaw",value:158,description:"Outlaw. Neutral archer. Attacks everyone he sees. Has 15 HP."},{name:"PATH_1",value:339,description:"Muddy trail. Can overlap with water and other stuff."},{name:"PATH_2",value:340,description:"Muddy trail. Can overlap with water and other stuff."},{name:"PATH_3",value:341,description:"Muddy trail. Can overlap with water and other stuff."},{name:"PATH_4",value:338,description:"Two muddy trails crossing. Can overlap with water and other stuff."},{name:"PIECE_OF_THE_TRUE_CROSS",value:688,description:"Piece of the True Cross. Black relic. Disappears when picked up."},{name:"PLANT",value:818,description:"Small grass. Can be placed on water. Varies."},{name:"PLANTS",value:818,description:"Small grass. Can be placed on water. Varies."},{name:"ROCK",value:623,description:"Rock. Can be placed on water, but `SEA_ROCKS1` and `SEA_ROCKS_2` look better. Varies."},{name:"ROMAN_RUINS",value:856,description:"Roman ruins. Can be placed on water. Varies."},{name:"RUBBLE_1_X_1",value:863,description:"Rubble from a destroyed building, single tile. Can be placed on water. Never disappears."},{value:143,description:"Rubble from a destroyed building, single tile. Can be placed on water. Disappears quickly."},{name:"RUBBLE_2_X_2",value:864,description:"Rubble from a destroyed building, 2x2 tiles. Can be placed on water. Never disappears."},{value:144,description:"Rubble from a destroyed building, 2x2 tiles. Can be placed on water. Disappears quickly."},{value:147,description:"Rubble from a destroyed building, 2x2 tiles. Can be placed on water. Disappears quickly."},{name:"RUBBLE_3_X_3",value:865,description:"Rubble from a destroyed building, 3x3 tiles. Can be placed on water. Never disappears."},{value:145,description:"Rubble from a destroyed building, 3x3 tiles. Can be placed on water. Disappears quickly."},{value:146,description:"Rubble from a destroyed building, 3x3 tiles. Can be placed on water. Disappears quickly."},{value:148,description:"Rubble from a destroyed building, 3x3 tiles. Can be placed on water. Disappears quickly."},{name:"RUINS",value:345,description:"Ruins. Quite big."},{name:"RUGS",value:711,description:"Rugs. Can be placed on water. Varies."},{name:"SEA_ROCKS_1",value:389,description:"Sea rocks."},{name:"SEA_ROCKS_2",value:396,description:"Sea rocks."},{name:"SHIPWRECK",value:721,description:"Shipwreck."},{name:"SHIPWRECK2",value:722,description:"Shipwreck."},{name:"SIGN",value:819,description:"Wooden road signal. Can be placed on water."},{name:"SKELETON",value:710,description:"Skeleton. Varies."},{value:417,description:"Small white stone."},{name:"STATUE",value:817,description:"Statue. Same as on a European university. Can be placed on water."},{name:"STUMP",value:809,description:"Stump of a cut tree. Varies. Never disappears."},{value:415,description:"Stump of a cut tree. Disappears after some time."},{value:737,description:"Stump of a cut tree. Disappears after some time."},{value:61,description:"Trireme. Disappears after some time. Can be on land. Varies (rotates)."}]}});var xe={};v(xe,{default:()=>mn});var mn,Ne=y(()=>{"use strict";mn={general:[{name:"CAPTURE_THE_RELIC",description:"Capture the Relic game type is selected."},{name:"LUDIKRIS_MAP",description:"LudiKRIS map is selected, 480x480 tiles."}],terrains:[{name:"DLC_ROCK",value:40,description:"Road terrain. No buildings, used in King of the Hill game type around the relic. You can't place gold, stone, berries on any type of road."},{name:"DLC_SAVANNAH",value:41,description:"Savannah terrain."},{name:"DLC_DIRT4",value:42,description:"Dirty grass terrain."},{name:"DLC_DRYROAD",value:43,description:"Desert road terrain."},{name:"DLC_MOORLAND",value:44,description:"Muddy grass terrain."},{name:"DLC_CRACKED",value:45,description:"Cracked desert terrain. Buildings on it to take 25% more damage."},{name:"DLC_QUICKSAND",value:46,description:"Quicksand terrain. Not sailable. No buildings."},{name:"DLC_BLACK",value:47,description:"Pure black terrain. No buildings."},{name:"DLC_DRAGONFOREST",value:48,description:"Dragon tree forest terrain. Dense forest on dirt."},{name:"DLC_BAOBAFOREST",value:49,description:"Baobab forest terrain. Sparse 200 wood trees on savannah."},{name:"DLC_ACACIAFOREST",value:50,description:"Acacia forest terrain. Sparse forest on dirt (`DLC_DIRT4`)."}],entities:[{value:184,description:"Condottiero. Castle Age unit."},{value:882,description:"Condottiero. Castle Age unit."},{name:"DLC_GENITOUR",value:1010,description:"Genitour. Castle Age unit."},{name:"DLC_ELITEGENITOUR",value:1012,description:"Elite Genitour. Imperial Age unit."},{value:185,description:"Slinger. Castle Age unit."},{value:207,description:"Imperial Camel. Imperial Age unit."},{name:"DLC_SIEGETOWER",value:1105,description:"Siege Tower. Castle Age unit."},{value:885,description:"Siege Tower with a different design. Castle Age unit."},{name:"DLC_DEMOLITIONRAFT",value:1104,description:"Demolition Raft. Feudal Age unit."},{name:"DLC_FIREGALLEY",value:1103,description:"Fire Galley. Feudal Age unit."},{name:"DLC_CARAVEL",value:1004,description:"Caravel. Castle Age unit."},{name:"DLC_ELITECARAVEL",value:1006,description:"Elite Caravel. Imperial Age unit."},{value:866,description:"Genoese Crossbowman. Castle Age unit."},{value:868,description:"Elite Genoese Crossbowman. Imperial Age unit."},{value:869,description:"Magyar Huszar. Castle Age unit."},{value:871,description:"Elite Magyar Huszar. Imperial Age unit."},{value:873,description:"Elephant Archer. Castle Age unit."},{value:875,description:"Elite Elephant Archer. Imperial Age unit."},{value:876,description:"Boyar. Castle Age unit."},{value:878,description:"Elite Boyar. Imperial Age unit."},{value:879,description:"Kamayuk. Castle Age unit."},{value:881,description:"Elite Kamayuk. Imperial Age unit."},{value:886,description:"Tarkan. Castle Age unit."},{value:887,description:"Elite Tarkan. Imperial Age unit."},{name:"DLC_ORGANGUN",value:1001,description:"Organ Gun. Castle Age unit."},{name:"DLC_ELITEORGANGUN",value:1003,description:"Elite Organ Gun. Imperial Age unit."},{name:"DLC_CAMELARCHER",value:1007,description:"Camel Archer. Castle Age unit."},{name:"DLC_ELITECAMELARCHER",value:1009,description:"Elite Camel Archer. Imperial Age unit."},{name:"DLC_GBETO",value:1013,description:"Gbeto. Castle Age unit."},{name:"DLC_ELITEGBETO",value:1015,description:"Elite Gbeto. Imperial Age unit."},{name:"DLC_SHOTELWARRIOR",value:1016,description:"Shotel Warrior. Castle Age unit."},{name:"DLC_ELITESHOTELWARRIOR",value:1018,description:"Elite Shotel Warrior. Imperial Age unit."},{value:922,description:"Monk with Relic."},{value:923,description:"Queen. Like `KING`."},{value:1,description:"Legionary."},{value:52,description:"Royal Janissary."},{name:"CARAVAN",value:275,description:"Centurion (NOT a Caravan)."},{name:"DLC_MUSA",value:1034,description:"DLC_MUSA. Camel Archer. Hero unit."},{name:"DLC_SUNDJATA",value:1035,description:"DLC_SUNDJATA. Light Cavalry. Hero unit."},{name:"DLC_TARIQ",value:1036,description:"DLC_TARIQ. Genitour. Hero unit."},{name:"DLC_RICHARDDECLARE",value:1037,description:"DLC_RICHARDDECLARE. Light Cavalry. Hero unit."},{name:"DLC_TRISTAN",value:1038,description:"DLC_TRISTAN. Magyar Huszar. Hero unit."},{name:"DLC_YODIT",value:1039,description:"DLC_YODIT. Queen with no attack. Hero unit."},{name:"DLC_HENRY2",value:1040,description:"DLC_HENRY. Two-Handed Swordsman. Hero unit."},{name:"DLC_YEKUNOAMLAK",value:1064,description:"DLC_YEKUNOAMLAK. Shotel Warrior. Hero unit."},{name:"DLC_WARRIORYODIT",value:1066,description:"DLC_WARRIORYODIT. Gbeto. Hero unit."},{name:"DLC_ITZCOATL",value:1067,description:"DLC_ITZCOATL. Jaguar Warrior. Hero unit."},{name:"DLC_MUSTAFA",value:1068,description:"DLC_MUSTAFA. Janissary. Hero unit."},{name:"DLC_PACAL2",value:1069,description:"DLC_PACAL. Plumed Archer. Hero unit."},{name:"DLC_BABUR",value:1070,description:"DLC_BABUR. Imperial Camel. Hero unit."},{name:"DLC_ABRAHAELEPHANT",value:1071,description:"DLC_ABRAHAELEPHANT. War Elephant. Hero unit."},{name:"DLC_GUGLIELMO",value:1072,description:"DLC_GUGLIELMO. Genoese Crossbowman. Hero unit."},{name:"DLC_SU_DINGFANG",value:1073,description:"DLC_SU. Chu Ko Nu. Hero unit."},{name:"DLC_PACHACUTI",value:1074,description:"DLC_PACHACUTI. Kamayuk. Hero unit."},{name:"DLC_HUAYNA_CAPAC",value:1075,description:"DLC_HUAYNA. Slinger. Hero unit."},{name:"DLC_MIKLOSTOLDI",value:1076,description:"DLC_MIKLOSTOLDI. Magyar Huszar. Hero unit."},{name:"DLC_LITTLEJOHN",value:1077,description:"DLC_LITTLEJOHN. Spearman. Hero unit."},{name:"DLC_ZAWISZATHEBLACK",value:1078,description:"DLC_ZAWISZATHEBLACK. Hussar. Hero unit."},{name:"DLC_SUMANGURU",value:1080,description:"DLC_SUMANGURU. Cataphract. Hero unit."},{name:"DLC_DAGNAJAN",value:1106,description:"DLC_DAGNAJAN. Elephant archer. Hero unit."},{value:1109,description:"Gidajan. Carries sword and shield. Hero unit."},{value:193,description:"Vlad Dracula. Boyar."},{value:307,description:"Quauhtemoc. Elite Eagle Warrior."},{value:425,description:"Francisco de Orellana. Elite Conquistador."},{value:427,description:"Gonzalo Pizarro. Elite Conquistador."},{value:429,description:"Frederick Barbarossa. Elite Teutonic Knight."},{value:437,description:"Prithviraj. Heavy Cavalry Archer."},{value:439,description:"Francesco Sforza. Samurai."},{value:925,description:"Sanyogita. Queen."},{value:926,description:"Prithvi. Crossbowman."},{value:927,description:"Chand Bhai. Monk with unique graphic."},{value:929,description:"Saladin. Elite Mameluke."},{value:930,description:"Khosrau. Elite Elephant Archer."},{value:931,description:"Jarl. Elite Tarkan."},{value:932,description:"Savaran. Elite Cataphract."},{value:943,description:"Osman. Heavy Cavalry Archer."},{value:639,description:"Penguin. Cheat unit."},{value:934,description:"Alfred the Alpaca. Cheat unit."},{value:2,description:"Dead Legionary."},{value:186,description:"Dead Slinger."},{value:189,description:"Dead Flamethrower."},{value:277,description:"Dead Centurion."},{value:300,description:"Dead Imperial Camel."},{value:362,description:"Dead Nordic Swordsman."},{value:412,description:"Dead Monk."},{value:489,description:"Dead Bear."},{value:641,description:"Dead Penguin."},{value:780,description:"Dead Llama."},{value:843,description:"Dead Cow."},{value:848,description:"Dead Donkey."},{value:867,description:"Dead Genoese Crossbowman."},{value:870,description:"Dead Magyar Huszar."},{value:874,description:"Dead Elephant Archer."},{value:877,description:"Dead Boyar."},{value:880,description:"Dead Kamayuk."},{value:883,description:"Dead Condottiero."},{value:891,description:"Dead Siege Tower."},{value:893,description:"Dead Heavy Pikeman."},{value:895,description:"Dead Eastern Swordsman."},{value:898,description:"Dead Camel."},{value:919,description:"Dead Amazon Warrior."},{value:920,description:"Dead Amazon Archer."},{value:921,description:"Dead Imam."},{value:924,description:"Dead Queen."},{value:928,description:"Dead Chand Bhai."},{value:935,description:"Dead Alfred the Alpaca."},{value:937,description:"Dead Elephant."},{value:945,description:"Dead Shaw."},{value:1002,description:"Dead Organ Gun."},{value:1005,description:"Dead Organ Gun."},{value:1008,description:"Dead Camel Archer."},{value:1011,description:"Dead Genitour."},{value:1014,description:"Dead Gbeto."},{value:1017,description:"Dead Shotel Warrior."},{value:1020,description:"Dead Zebra."},{value:1024,description:"Dead Priest."},{value:1027,description:"Dead Ostrich."},{value:1030,description:"Dead Lion."},{value:1032,description:"Dead Crocodile."},{value:1061,description:"Dead Goat."},{value:1107,description:"Dead Siege Tower."},{value:1108,description:"Dead Dagnajan."},{value:1110,description:"Dead Gidajan."},{value:1116,description:"Dead Eagle Warrior."},{value:1117,description:"Dead Elite Eagle Warrior."},{name:"DLC_FEITORIA",value:1021,description:"Feitoria. Imperial Age building."},{value:790,description:"Palisade gate, open, SW-NE. Can be placed on water, friendly ships can pass through."},{value:794,description:"Palisade gate, open, SE-NW. Can be placed on water, friendly ships can pass through."},{value:798,description:"Palisade gate, open, horizontal. Can be placed on water, friendly ships can pass through."},{value:802,description:"Palisade gate, open, vertical. Can be placed on water, friendly ships can pass through."},{value:789,description:"Palisade gate, closed, SW-NE. Can be placed on water, friendly ships can pass through."},{value:793,description:"Palisade gate, closed, SE-NW. Can be placed on water, friendly ships can pass through."},{value:797,description:"Palisade gate, closed, horizontal. Can be placed on water, friendly ships can pass through."},{value:801,description:"Palisade gate, closed, vertical. Can be placed on water, friendly ships can pass through."},{value:785,description:"Sea Tower. Water building. Can shoot arrows."},{value:791,description:"Sea Wall. A palisade wall on water. Not automatically placed in rings. Part of the palisade gate graphics."},{name:"DLC_FENCE",value:1062,description:"Fence. Wooden wall with 1 HP."},{name:"DLC_STORAGE",value:1081,description:"Storage. 2x2 structure."},{name:"DLC_AFRICANHUT_A",value:1082,description:"African Hut A. 5 housing space."},{name:"DLC_AFRICANHUT_B",value:1083,description:"African Hut B. 5 housing space."},{name:"DLC_AFRICANHUT_C",value:1084,description:"African Hut C. 5 housing space."},{name:"DLC_AFRICANHUT_D",value:1085,description:"African Hut D. 5 housing space."},{name:"DLC_AFRICANHUT_E",value:1086,description:"African Hut E. 5 housing space."},{name:"DLC_AFRICANHUT_F",value:1087,description:"African Hut F. 5 housing space."},{name:"DLC_AFRICANHUT_G",value:1088,description:"African Hut G. 5 housing space."},{name:"DLC_GRANARY",value:1089,description:"Granary. Single tile structure."},{name:"DLC_BARRICADE",value:1090,description:"Barricade. Has 1000 HP."},{value:1096,description:"Palace. Wonder from random civilization."},{value:1097,description:"Tent. 5 housing space."},{value:1098,description:"Tent. 6 housing space."},{value:1099,description:"Tent. 7 housing space."},{value:1100,description:"Tent. 8 housing space."},{value:1101,description:"Tent. 9 housing space."},{value:1102,description:"Sea Fortification. Tower. Cannot be placed on water."},{value:33,description:"Fortress."},{value:119,description:"Fortified Palisade Wall."},{value:190,description:"Fire Tower."},{value:231,description:"Aqueduct."},{value:251,description:"Amphitheatre."},{value:263,description:"Coliseum."},{value:308,description:"Indestructible Outpost."},{value:370,description:"City Wall."},{value:637,description:"Temple of Heaven."},{value:872,description:"Quimter Cathedral."},{value:899,description:"Arch of Constantine."},{value:61,description:"Dolphin. Like great fish."},{name:"DLC_BEAR",value:486,description:"Bear. Like `WOLF`."},{name:"DLC_LLAMA",value:305,description:"Llama. Like `SHEEP`."},{name:"DLC_VULTURE",value:917,description:"Vulture. Like `HAWK` but larger and white."},{name:"DLC_COW",value:705,description:"Cow. Like `SHEEP` but has 150 food and 14 HP."},{name:"DLC_ELEPHANT",value:936,description:"Elephant. Like `BOAR` but has 400 food."},{name:"DLC_GOAT",value:1060,description:"Goat. Like `SHEEP`."},{name:"DLC_ZEBRA",value:1019,description:"Zebra. Like `DEER`."},{name:"DLC_OSTRICH",value:1026,description:"Ostrich. Like `DEER`."},{name:"DLC_STORK",value:1028,description:"Stork. Like `HAWK`."},{name:"DLC_CROCODILE",value:1031,description:"Crocodile. Like `WOLF`."},{name:"DLC_LION",value:1029,description:"Lion. Like `WOLF`."},{value:1056,description:"Falcon. Like `HAWK`."},{value:846,description:"Donkey. Has no food."},{value:897,description:"Camel. Like `HORSE`."},{value:888,description:"Incan Llama + Eagle Scout. invisible in scenario editor."},{value:889,description:"Incan Eagle Scout. invisible in scenario editor."},{value:890,description:"Incan Llama. invisible in scenario editor."},{name:"DLC_BAOBABTREE",value:1052,description:"Baobab tree. Varies. Has 200 wood."},{name:"DLC_DRAGONTREE",value:1051,description:"Dragon tree. Varies. Has 100 wood."},{name:"DLC_ACACIATREE",value:1063,description:"Acacia tree. Varies. Has 100 wood."},{value:493,description:"Advanced Heavy Crossbowman."},{value:497,description:"Dead Advanced Heavy Crossbowman."},{value:94,description:"Alternative Berserk."},{value:1022,description:"Monk Boat. Converts units."},{value:1079,description:"Like `DLC_GENITOUR` but with 60 HP."},{name:"DLC_AOE1PRIEST",value:1023,description:"Priest from Age of Empires 1."},{value:1025,description:"Priest from Age of Empires 1 with relic."},{name:"DLC_ORANGEBUSH",value:1059,description:"Orange Bush. Like `FORAGE_BUSH`."},{name:"DLC_BOULDER_A",value:1048,description:"Boulder. Varies. Small single tile rock formation."},{name:"DLC_BOULDER_B",value:1049,description:"Boulder. Varies. Tall single tile rock formation."},{name:"DLC_BOULDER_C",value:1050,description:"Boulder. 3x3 rock formation."},{name:"DLC_AFRICANBUSH",value:1053,description:"African bush. Green bushes. Has 100 wood."},{name:"DLC_AFRICANBUSH_2",value:1054,description:"African bush. Snowy bushes. Has 100 wood."},{name:"DLC_SAVANNAHPATCH",value:1033,description:"Savannah patch. Light brown grass."},{name:"DLC_MOUNTAIN_5",value:1041,description:"Mountain. Like `MOUNTAIN_1`."},{name:"DLC_MOUNTAIN_6",value:1042,description:"Rocky mountain."},{name:"DLC_MOUNTAIN_7",value:1043,description:"Rocky mountain."},{name:"DLC_MOUNTAIN_8",value:1044,description:"Rocky mountain."},{name:"DLC_MOUNTAIN_9",value:1045,description:"Snowy mountain."},{name:"DLC_MOUNTAIN_10",value:1046,description:"Snowy mountain."},{name:"DLC_MOUNTAIN_11",value:1047,description:"Snowy mountain."},{name:"DLC_ANIMALSKELETON",value:1091,description:"Animal skeleton."},{name:"DLC_STELAE_A",value:1092,description:"2x2 pillar."},{name:"DLC_STELAE_B",value:1093,description:"1x1 pillar."},{name:"DLC_STELAE_C",value:1094,description:"1x1 pillar."},{name:"DLC_GALLOW",value:1095,description:"Tree with noose."},{value:1065,description:"Wooden rubble."},{value:1056,description:"Throwing knife. Projectile, spins and makes sounds."},{value:1057,description:"Heavy bolt. Projectile, stationary and silent."},{value:1058,description:"Flaming heavy bolt. Projectile, stationary and silent."},{value:1111,description:"Bolt. Projectile, stationary and silent."},{value:1112,description:"Flaming bolt. Projectile, stationary and silent."},{value:1113,description:"Bolt. Projectile, stationary and silent."},{value:1114,description:"Flaming bolt. Projectile, stationary and silent."},{value:191,description:"Rubble 2x2."},{value:192,description:"Rubble 2x2. Disappears after some time."},{value:301,description:"Grass Patch. Tall grass."},{value:302,description:"Bush from `JUNGLE` terrain. Varies."},{value:303,description:"Seagulls in a patch."},{value:304,description:"Bonfire. Can be placed as a player object to offer line of sight."},{value:306,description:"Black Tile. Single tile of pure black."},{value:472,description:"Loot. Pile of golden treasure."},{value:635,description:"Burned Building. Varies."},{value:758,description:"Burned Building. Varies."},{value:839,description:"Rock (Stone). Turns into stone when attacked by villagers."},{value:841,description:"Rock (Gold). Turns into gold when attacked by villagers."},{value:884,description:"Wild Camel. Like `WILD_HORSE`."},{value:896,description:"Waterfall."},{value:900,description:"Rain. Single tile patch."},{value:901,description:"Flag F. With golden emblem."},{value:902,description:"Smoke. From blacksmith."},{value:904,description:"Boardwalk, SW-NE, top end. Narrow wooden bridge."},{value:911,description:"Boardwalk, SW-NE, top end. Narrow wooden bridge."},{value:905,description:"Boardwalk, SW-NE, middle. Narrow wooden bridge."},{value:912,description:"Boardwalk, SW-NE, middle. Narrow wooden bridge."},{value:906,description:"Boardwalk, SW-NE, bottom end. Narrow wooden bridge."},{value:913,description:"Boardwalk, SW-NE, bottom end. Narrow wooden bridge."},{value:907,description:"Boardwalk, SE-NW, top end. Narrow wooden bridge."},{value:908,description:"Boardwalk, SE-NW, middle. Narrow wooden bridge."},{value:909,description:"Boardwalk, SE-NW, bottom end. Narrow wooden bridge."},{value:910,description:"Impaled Corpse. Varies. Can be player object."},{value:914,description:"Quarry. Pile of mined rocks."},{value:915,description:"Lumber. Pile of logs."},{value:916,description:"Goods. Fruit market stall."},{value:918,description:"Brown rocks. Varies."},{value:933,description:"Barrels. Varies."},{value:939,description:"Small flame 1."},{value:940,description:"Small flame 2."},{value:941,description:"Large flame 3."},{value:942,description:"Large flame 4."},{value:138,description:"Spy. Like `MAN_AT_ARMS` but with high attack."},{value:188,description:"Flamethrower. Dragon in AoFE."},{value:361,description:"Nordic Swordsman."},{value:753,description:"Heavy Eagle Warrior."},{value:778,description:"Canoe."},{value:825,description:"Amazon Warrior."},{value:850,description:"Amazon Archer."},{value:892,description:"Heavy Pikeman."},{value:894,description:"Eastern Swordsman."},{value:938,description:"Dragon Ship."},{value:944,description:"Relic Cart."}]}});var De={};v(De,{default:()=>cn});var cn,ke=y(()=>{"use strict";cn={general:[{name:"CAPTURE_RELICS",description:"Capture the Relics game type is selected."},{name:"DEFEND_WONDER",description:"Defend the Wonder game type is selected."},{name:"KING_OT_HILL",description:"King of the Hill game type is selected."},{name:"RANDOM_MAP",description:"Random Map game type is selected."},{name:"TURBO_RANDOM_MAP",description:"Turbo Random Map game type is selected."},{name:"WONDER_RACE",description:"Wonder Race game type is selected."},{name:"1_PLAYER_GAME",description:"1 player is in the game, including AI players."},{name:"2_PLAYER_GAME",description:"2 players are in the game, including AI players."},{name:"3_PLAYER_GAME",description:"3 players are in the game, including AI players."},{name:"4_PLAYER_GAME",description:"4 players are in the game, including AI players."},{name:"5_PLAYER_GAME",description:"5 players are in the game, including AI players."},{name:"6_PLAYER_GAME",description:"6 players are in the game, including AI players."},{name:"7_PLAYER_GAME",description:"7 players are in the game, including AI players."},{name:"8_PLAYER_GAME",description:"8 players are in the game, including AI players."}],terrains:[],entities:[]}});var $n={};v($n,{aoc:()=>we,aocCommands:()=>Se,dlc:()=>Oe,dlcCommands:()=>Te,formatParseError:()=>re,lint:()=>rn,parse:()=>qe,userpatch:()=>He,userpatchCommands:()=>Re});module.exports=C($n);var P=require("nearley");function p(e){return e[0]}var{lexer:n}=(z(),C(ee)),Ue={Lexer:n,ParserRules:[{name:"Script$ebnf$1",symbols:["__"],postprocess:p},{name:"Script$ebnf$1",symbols:[],postprocess:()=>null},{name:"Script$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"Script$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelLine",n.has("eol")?{type:"eol"}:eol]},{name:"Script$ebnf$2$subexpression$1$ebnf$1",symbols:["Script$ebnf$2$subexpression$1$ebnf$1","Script$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"Script$ebnf$2$subexpression$1$ebnf$2",symbols:[n.has("eol")?{type:"eol"}:eol],postprocess:p},{name:"Script$ebnf$2$subexpression$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"Script$ebnf$2$subexpression$1",symbols:["Script$ebnf$2$subexpression$1$ebnf$1","TopLevelLine","Script$ebnf$2$subexpression$1$ebnf$2"]},{name:"Script$ebnf$2",symbols:["Script$ebnf$2$subexpression$1"],postprocess:p},{name:"Script$ebnf$2",symbols:[],postprocess:()=>null},{name:"Script$ebnf$3$subexpression$1$ebnf$1",symbols:[]},{name:"Script$ebnf$3$subexpression$1$ebnf$1$subexpression$1",symbols:["Section",n.has("eol")?{type:"eol"}:eol]},{name:"Script$ebnf$3$subexpression$1$ebnf$1",symbols:["Script$ebnf$3$subexpression$1$ebnf$1","Script$ebnf$3$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"Script$ebnf$3$subexpression$1$ebnf$2",symbols:[n.has("eol")?{type:"eol"}:eol],postprocess:p},{name:"Script$ebnf$3$subexpression$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"Script$ebnf$3$subexpression$1",symbols:["Script$ebnf$3$subexpression$1$ebnf$1","Section","Script$ebnf$3$subexpression$1$ebnf$2"]},{name:"Script$ebnf$3",symbols:["Script$ebnf$3$subexpression$1"],postprocess:p},{name:"Script$ebnf$3",symbols:[],postprocess:()=>null},{name:"Script",symbols:["Script$ebnf$1","Script$ebnf$2","Script$ebnf$3"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["Command"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["ConstDefinition"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["FlagDefinition"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["IncludeDrs"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["TopLevelIf"]},{name:"TopLevelLine$macrocall$2$subexpression$1",symbols:["TopLevelRandom"]},{name:"TopLevelLine$macrocall$2",symbols:["TopLevelLine$macrocall$2$subexpression$1"]},{name:"TopLevelLine$macrocall$1$ebnf$1",symbols:[]},{name:"TopLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"TopLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"TopLevelLine$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","TopLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1"]},{name:"TopLevelLine$macrocall$1$ebnf$1",symbols:["TopLevelLine$macrocall$1$ebnf$1","TopLevelLine$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelLine$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"TopLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"TopLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"TopLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1","MultilineComment"]},{name:"TopLevelLine$macrocall$1$subexpression$1$ebnf$1",symbols:["TopLevelLine$macrocall$1$subexpression$1$ebnf$1","TopLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelLine$macrocall$1$subexpression$1",symbols:["TopLevelLine$macrocall$2","TopLevelLine$macrocall$1$subexpression$1$ebnf$1"]},{name:"TopLevelLine$macrocall$1$subexpression$1",symbols:["MultilineComment"]},{name:"TopLevelLine$macrocall$1",symbols:["TopLevelLine$macrocall$1$ebnf$1","TopLevelLine$macrocall$1$subexpression$1"]},{name:"TopLevelLine",symbols:["TopLevelLine$macrocall$1"]},{name:"TopLevelIf$macrocall$2",symbols:["TopLevelLine"]},{name:"TopLevelIf$macrocall$3",symbols:["Section"]},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$1",symbols:["TopLevelIf$macrocall$1$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$2",symbols:[]},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$2$subexpression$1",symbols:["TopLevelIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$subexpression$1$ebnf$2",symbols:["TopLevelIf$macrocall$1$subexpression$1$ebnf$2","TopLevelIf$macrocall$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$subexpression$1",symbols:["TopLevelIf$macrocall$1$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$subexpression$1$ebnf$2"]},{name:"TopLevelIf$macrocall$1$ebnf$1",symbols:[]},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[]},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:["TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:[]},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1",symbols:["TopLevelIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:["TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2","TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$ebnf$1$subexpression$1",symbols:[n.has("elseifToken")?{type:"elseifToken"}:elseifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2"]},{name:"TopLevelIf$macrocall$1$ebnf$1",symbols:["TopLevelIf$macrocall$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["TopLevelIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2","TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelIf$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("elseToken")?{type:"elseToken"}:elseToken,"__","TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"TopLevelIf$macrocall$1$ebnf$2",symbols:["TopLevelIf$macrocall$1$ebnf$2$subexpression$1"],postprocess:p},{name:"TopLevelIf$macrocall$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"TopLevelIf$macrocall$1",symbols:[n.has("ifToken")?{type:"ifToken"}:ifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","TopLevelIf$macrocall$1$subexpression$1","TopLevelIf$macrocall$1$ebnf$1","TopLevelIf$macrocall$1$ebnf$2",n.has("endifToken")?{type:"endifToken"}:endifToken]},{name:"TopLevelIf",symbols:["TopLevelIf$macrocall$1"]},{name:"TopLevelRandom$macrocall$2",symbols:["TopLevelLine"]},{name:"TopLevelRandom$macrocall$3",symbols:["Section"]},{name:"TopLevelRandom$macrocall$1$ebnf$1",symbols:[]},{name:"TopLevelRandom$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","__"]},{name:"TopLevelRandom$macrocall$1$ebnf$1",symbols:["TopLevelRandom$macrocall$1$ebnf$1","TopLevelRandom$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["TopLevelRandom$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1","TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["TopLevelRandom$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2","TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1","TopLevelRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"TopLevelRandom$macrocall$1$ebnf$2",symbols:["TopLevelRandom$macrocall$1$ebnf$2$subexpression$1"]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:[]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1",symbols:["TopLevelRandom$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:["TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1","TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:[]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1",symbols:["TopLevelRandom$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:["TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2","TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1$ebnf$2$subexpression$2",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1","TopLevelRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2"]},{name:"TopLevelRandom$macrocall$1$ebnf$2",symbols:["TopLevelRandom$macrocall$1$ebnf$2","TopLevelRandom$macrocall$1$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"TopLevelRandom$macrocall$1",symbols:[n.has("startRandom")?{type:"startRandom"}:startRandom,n.has("eol")?{type:"eol"}:eol,"TopLevelRandom$macrocall$1$ebnf$1","TopLevelRandom$macrocall$1$ebnf$2",n.has("endRandom")?{type:"endRandom"}:endRandom]},{name:"TopLevelRandom",symbols:["TopLevelRandom$macrocall$1"]},{name:"Section$ebnf$1$subexpression$1$ebnf$1",symbols:[]},{name:"Section$ebnf$1$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionLine",n.has("eol")?{type:"eol"}:eol]},{name:"Section$ebnf$1$subexpression$1$ebnf$1",symbols:["Section$ebnf$1$subexpression$1$ebnf$1","Section$ebnf$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"Section$ebnf$1$subexpression$1",symbols:[n.has("eol")?{type:"eol"}:eol,"Section$ebnf$1$subexpression$1$ebnf$1","SectionLine"]},{name:"Section$ebnf$1",symbols:["Section$ebnf$1$subexpression$1"],postprocess:p},{name:"Section$ebnf$1",symbols:[],postprocess:()=>null},{name:"Section",symbols:[n.has("lArrow")?{type:"lArrow"}:lArrow,n.has("identifier")?{type:"identifier"}:identifier,n.has("rArrow")?{type:"rArrow"}:rArrow,"Section$ebnf$1"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["Command"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["ConditionalCommand"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["RandomCommand"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["ConstDefinition"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["FlagDefinition"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["IncludeDrs"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["SectionIf"]},{name:"SectionLine$macrocall$2$subexpression$1",symbols:["SectionRandom"]},{name:"SectionLine$macrocall$2",symbols:["SectionLine$macrocall$2$subexpression$1"]},{name:"SectionLine$macrocall$1$ebnf$1",symbols:[]},{name:"SectionLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"SectionLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"SectionLine$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","SectionLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1"]},{name:"SectionLine$macrocall$1$ebnf$1",symbols:["SectionLine$macrocall$1$ebnf$1","SectionLine$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionLine$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"SectionLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"SectionLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"SectionLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1","MultilineComment"]},{name:"SectionLine$macrocall$1$subexpression$1$ebnf$1",symbols:["SectionLine$macrocall$1$subexpression$1$ebnf$1","SectionLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionLine$macrocall$1$subexpression$1",symbols:["SectionLine$macrocall$2","SectionLine$macrocall$1$subexpression$1$ebnf$1"]},{name:"SectionLine$macrocall$1$subexpression$1",symbols:["MultilineComment"]},{name:"SectionLine$macrocall$1",symbols:["SectionLine$macrocall$1$ebnf$1","SectionLine$macrocall$1$subexpression$1"]},{name:"SectionLine",symbols:["SectionLine$macrocall$1"]},{name:"SectionIf$macrocall$2",symbols:["SectionLine"]},{name:"SectionIf$macrocall$3",symbols:["Section"]},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$1",symbols:["SectionIf$macrocall$1$subexpression$1$ebnf$1","SectionIf$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$2",symbols:[]},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$2$subexpression$1",symbols:["SectionIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$subexpression$1$ebnf$2",symbols:["SectionIf$macrocall$1$subexpression$1$ebnf$2","SectionIf$macrocall$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$subexpression$1",symbols:["SectionIf$macrocall$1$subexpression$1$ebnf$1","SectionIf$macrocall$1$subexpression$1$ebnf$2"]},{name:"SectionIf$macrocall$1$ebnf$1",symbols:[]},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[]},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:["SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1","SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:[]},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1",symbols:["SectionIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:["SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2","SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$ebnf$1$subexpression$1",symbols:[n.has("elseifToken")?{type:"elseifToken"}:elseifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$1","SectionIf$macrocall$1$ebnf$1$subexpression$1$ebnf$2"]},{name:"SectionIf$macrocall$1$ebnf$1",symbols:["SectionIf$macrocall$1$ebnf$1","SectionIf$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionIf$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1","SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["SectionIf$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2","SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionIf$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("elseToken")?{type:"elseToken"}:elseToken,"__","SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$1","SectionIf$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"SectionIf$macrocall$1$ebnf$2",symbols:["SectionIf$macrocall$1$ebnf$2$subexpression$1"],postprocess:p},{name:"SectionIf$macrocall$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"SectionIf$macrocall$1",symbols:[n.has("ifToken")?{type:"ifToken"}:ifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","SectionIf$macrocall$1$subexpression$1","SectionIf$macrocall$1$ebnf$1","SectionIf$macrocall$1$ebnf$2",n.has("endifToken")?{type:"endifToken"}:endifToken]},{name:"SectionIf",symbols:["SectionIf$macrocall$1"]},{name:"SectionRandom$macrocall$2",symbols:["SectionLine"]},{name:"SectionRandom$macrocall$3",symbols:["Section"]},{name:"SectionRandom$macrocall$1$ebnf$1",symbols:[]},{name:"SectionRandom$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","__"]},{name:"SectionRandom$macrocall$1$ebnf$1",symbols:["SectionRandom$macrocall$1$ebnf$1","SectionRandom$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["SectionRandom$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1","SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["SectionRandom$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2","SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$1","SectionRandom$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"SectionRandom$macrocall$1$ebnf$2",symbols:["SectionRandom$macrocall$1$ebnf$2$subexpression$1"]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:[]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1",symbols:["SectionRandom$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:["SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1","SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:[]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1",symbols:["SectionRandom$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:["SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2","SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1$ebnf$2$subexpression$2",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$1","SectionRandom$macrocall$1$ebnf$2$subexpression$2$ebnf$2"]},{name:"SectionRandom$macrocall$1$ebnf$2",symbols:["SectionRandom$macrocall$1$ebnf$2","SectionRandom$macrocall$1$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"SectionRandom$macrocall$1",symbols:[n.has("startRandom")?{type:"startRandom"}:startRandom,n.has("eol")?{type:"eol"}:eol,"SectionRandom$macrocall$1$ebnf$1","SectionRandom$macrocall$1$ebnf$2",n.has("endRandom")?{type:"endRandom"}:endRandom]},{name:"SectionRandom",symbols:["SectionRandom$macrocall$1"]},{name:"Command$ebnf$1",symbols:["CommandBody"],postprocess:p},{name:"Command$ebnf$1",symbols:[],postprocess:()=>null},{name:"Command",symbols:["Attribute","Command$ebnf$1"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["Attribute"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["ConstDefinition"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["FlagDefinition"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["IncludeDrs"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["CommandIf"]},{name:"CommandLevelLine$macrocall$2$subexpression$1",symbols:["CommandRandom"]},{name:"CommandLevelLine$macrocall$2",symbols:["CommandLevelLine$macrocall$2$subexpression$1"]},{name:"CommandLevelLine$macrocall$1$ebnf$1",symbols:[]},{name:"CommandLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"CommandLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"CommandLevelLine$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","CommandLevelLine$macrocall$1$ebnf$1$subexpression$1$ebnf$1"]},{name:"CommandLevelLine$macrocall$1$ebnf$1",symbols:["CommandLevelLine$macrocall$1$ebnf$1","CommandLevelLine$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandLevelLine$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"CommandLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[n.has("space")?{type:"space"}:space],postprocess:p},{name:"CommandLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"CommandLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1$ebnf$1","MultilineComment"]},{name:"CommandLevelLine$macrocall$1$subexpression$1$ebnf$1",symbols:["CommandLevelLine$macrocall$1$subexpression$1$ebnf$1","CommandLevelLine$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandLevelLine$macrocall$1$subexpression$1",symbols:["CommandLevelLine$macrocall$2","CommandLevelLine$macrocall$1$subexpression$1$ebnf$1"]},{name:"CommandLevelLine$macrocall$1$subexpression$1",symbols:["MultilineComment"]},{name:"CommandLevelLine$macrocall$1",symbols:["CommandLevelLine$macrocall$1$ebnf$1","CommandLevelLine$macrocall$1$subexpression$1"]},{name:"CommandLevelLine",symbols:["CommandLevelLine$macrocall$1"]},{name:"CommandIf$macrocall$2",symbols:["CommandLevelLine"]},{name:"CommandIf$macrocall$1$macrocall$2",symbols:["CommandIf$macrocall$2"]},{name:"CommandIf$macrocall$1$macrocall$3",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1",symbols:["CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2",symbols:["CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2","CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$subexpression$1$ebnf$2"]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2","CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1",symbols:[n.has("elseifToken")?{type:"elseifToken"}:elseifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$2"]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$1",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["CommandIf$macrocall$1$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2","CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("elseToken")?{type:"elseToken"}:elseToken,"__","CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2",symbols:["CommandIf$macrocall$1$macrocall$1$ebnf$2$subexpression$1"],postprocess:p},{name:"CommandIf$macrocall$1$macrocall$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"CommandIf$macrocall$1$macrocall$1",symbols:[n.has("ifToken")?{type:"ifToken"}:ifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","CommandIf$macrocall$1$macrocall$1$subexpression$1","CommandIf$macrocall$1$macrocall$1$ebnf$1","CommandIf$macrocall$1$macrocall$1$ebnf$2",n.has("endifToken")?{type:"endifToken"}:endifToken]},{name:"CommandIf$macrocall$1",symbols:["CommandIf$macrocall$1$macrocall$1"]},{name:"CommandIf",symbols:["CommandIf$macrocall$1"]},{name:"CommandRandom$macrocall$2",symbols:["CommandLevelLine"]},{name:"CommandRandom$macrocall$1$macrocall$2",symbols:["CommandRandom$macrocall$2"]},{name:"CommandRandom$macrocall$1$macrocall$3",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$1",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$1$subexpression$1",symbols:["MultilineComment","__"]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$1",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandRandom$macrocall$1$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1",symbols:["CommandRandom$macrocall$1$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1$ebnf$2"]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$1"]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1",symbols:["CommandRandom$macrocall$1$macrocall$2",n.has("eol")?{type:"eol"}:eol]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:[]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1",symbols:["CommandRandom$macrocall$1$macrocall$3",n.has("eol")?{type:"eol"}:eol]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2$ebnf$2"]},{name:"CommandRandom$macrocall$1$macrocall$1$ebnf$2",symbols:["CommandRandom$macrocall$1$macrocall$1$ebnf$2","CommandRandom$macrocall$1$macrocall$1$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandRandom$macrocall$1$macrocall$1",symbols:[n.has("startRandom")?{type:"startRandom"}:startRandom,n.has("eol")?{type:"eol"}:eol,"CommandRandom$macrocall$1$macrocall$1$ebnf$1","CommandRandom$macrocall$1$macrocall$1$ebnf$2",n.has("endRandom")?{type:"endRandom"}:endRandom]},{name:"CommandRandom$macrocall$1",symbols:["CommandRandom$macrocall$1$macrocall$1"]},{name:"CommandRandom",symbols:["CommandRandom$macrocall$1"]},{name:"ConditionalCommand$subexpression$1$subexpression$1$ebnf$1$subexpression$1",symbols:["Attribute",n.has("eol")?{type:"eol"}:eol]},{name:"ConditionalCommand$subexpression$1$subexpression$1$ebnf$1",symbols:["ConditionalCommand$subexpression$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:p},{name:"ConditionalCommand$subexpression$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"ConditionalCommand$subexpression$1$subexpression$1",symbols:["ConditionalCommand$subexpression$1$subexpression$1$ebnf$1"]},{name:"ConditionalCommand$subexpression$1$ebnf$1",symbols:[]},{name:"ConditionalCommand$subexpression$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1",symbols:["Attribute",n.has("eol")?{type:"eol"}:eol]},{name:"ConditionalCommand$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:["ConditionalCommand$subexpression$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:p},{name:"ConditionalCommand$subexpression$1$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"ConditionalCommand$subexpression$1$ebnf$1$subexpression$1",symbols:[n.has("elseifToken")?{type:"elseifToken"}:elseifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","ConditionalCommand$subexpression$1$ebnf$1$subexpression$1$ebnf$1"]},{name:"ConditionalCommand$subexpression$1$ebnf$1",symbols:["ConditionalCommand$subexpression$1$ebnf$1","ConditionalCommand$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"ConditionalCommand$subexpression$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1",symbols:["Attribute",n.has("eol")?{type:"eol"}:eol]},{name:"ConditionalCommand$subexpression$1$ebnf$2$subexpression$1$ebnf$1",symbols:["ConditionalCommand$subexpression$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"],postprocess:p},{name:"ConditionalCommand$subexpression$1$ebnf$2$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"ConditionalCommand$subexpression$1$ebnf$2$subexpression$1",symbols:[n.has("elseToken")?{type:"elseToken"}:elseToken,"__","ConditionalCommand$subexpression$1$ebnf$2$subexpression$1$ebnf$1"]},{name:"ConditionalCommand$subexpression$1$ebnf$2",symbols:["ConditionalCommand$subexpression$1$ebnf$2$subexpression$1"],postprocess:p},{name:"ConditionalCommand$subexpression$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"ConditionalCommand$subexpression$1",symbols:[n.has("ifToken")?{type:"ifToken"}:ifToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"__","ConditionalCommand$subexpression$1$subexpression$1","ConditionalCommand$subexpression$1$ebnf$1","ConditionalCommand$subexpression$1$ebnf$2",n.has("endifToken")?{type:"endifToken"}:endifToken]},{name:"ConditionalCommand",symbols:["ConditionalCommand$subexpression$1","CommandBody"]},{name:"RandomCommand$subexpression$1$ebnf$1",symbols:[]},{name:"RandomCommand$subexpression$1$ebnf$1$subexpression$1",symbols:["MultilineComment","__"]},{name:"RandomCommand$subexpression$1$ebnf$1",symbols:["RandomCommand$subexpression$1$ebnf$1","RandomCommand$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"RandomCommand$subexpression$1$ebnf$2$subexpression$1$subexpression$1",symbols:["Attribute",n.has("eol")?{type:"eol"}:eol]},{name:"RandomCommand$subexpression$1$ebnf$2$subexpression$1",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","RandomCommand$subexpression$1$ebnf$2$subexpression$1$subexpression$1"]},{name:"RandomCommand$subexpression$1$ebnf$2",symbols:["RandomCommand$subexpression$1$ebnf$2$subexpression$1"]},{name:"RandomCommand$subexpression$1$ebnf$2$subexpression$2$subexpression$1",symbols:["Attribute",n.has("eol")?{type:"eol"}:eol]},{name:"RandomCommand$subexpression$1$ebnf$2$subexpression$2",symbols:[n.has("percentChance")?{type:"percentChance"}:percentChance,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int,"__","RandomCommand$subexpression$1$ebnf$2$subexpression$2$subexpression$1"]},{name:"RandomCommand$subexpression$1$ebnf$2",symbols:["RandomCommand$subexpression$1$ebnf$2","RandomCommand$subexpression$1$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"RandomCommand$subexpression$1",symbols:[n.has("startRandom")?{type:"startRandom"}:startRandom,n.has("eol")?{type:"eol"}:eol,"RandomCommand$subexpression$1$ebnf$1","RandomCommand$subexpression$1$ebnf$2",n.has("endRandom")?{type:"endRandom"}:endRandom]},{name:"RandomCommand",symbols:["RandomCommand$subexpression$1","CommandBody"]},{name:"CommandBody$ebnf$1",symbols:[]},{name:"CommandBody$ebnf$1$subexpression$1$ebnf$1",symbols:["__"],postprocess:p},{name:"CommandBody$ebnf$1$subexpression$1$ebnf$1",symbols:[],postprocess:()=>null},{name:"CommandBody$ebnf$1$subexpression$1",symbols:["CommandBody$ebnf$1$subexpression$1$ebnf$1","MultilineComment"]},{name:"CommandBody$ebnf$1",symbols:["CommandBody$ebnf$1","CommandBody$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandBody$ebnf$2",symbols:["__"],postprocess:p},{name:"CommandBody$ebnf$2",symbols:[],postprocess:()=>null},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1",symbols:[]},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1$subexpression$1",symbols:["CommandLevelLine",n.has("eol")?{type:"eol"}:eol]},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1",symbols:["CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1","CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$2",symbols:[n.has("eol")?{type:"eol"}:eol],postprocess:p},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$2",symbols:[],postprocess:()=>null},{name:"CommandBody$ebnf$3$subexpression$1$subexpression$1",symbols:["CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$1","CommandLevelLine","CommandBody$ebnf$3$subexpression$1$subexpression$1$ebnf$2"]},{name:"CommandBody$ebnf$3$subexpression$1",symbols:["__","CommandBody$ebnf$3$subexpression$1$subexpression$1"]},{name:"CommandBody$ebnf$3",symbols:["CommandBody$ebnf$3$subexpression$1"],postprocess:p},{name:"CommandBody$ebnf$3",symbols:[],postprocess:()=>null},{name:"CommandBody",symbols:["CommandBody$ebnf$1","CommandBody$ebnf$2",n.has("lCurly")?{type:"lCurly"}:lCurly,"CommandBody$ebnf$3",n.has("rCurly")?{type:"rCurly"}:rCurly]},{name:"Attribute$ebnf$1",symbols:[]},{name:"Attribute$ebnf$1$subexpression$1$subexpression$1",symbols:[n.has("identifier")?{type:"identifier"}:identifier]},{name:"Attribute$ebnf$1$subexpression$1$subexpression$1",symbols:[n.has("int")?{type:"int"}:int]},{name:"Attribute$ebnf$1$subexpression$1",symbols:[n.has("space")?{type:"space"}:space,"Attribute$ebnf$1$subexpression$1$subexpression$1"]},{name:"Attribute$ebnf$1",symbols:["Attribute$ebnf$1","Attribute$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"Attribute",symbols:[n.has("identifier")?{type:"identifier"}:identifier,"Attribute$ebnf$1"]},{name:"ConstDefinition",symbols:[n.has("constToken")?{type:"constToken"}:constToken,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int]},{name:"FlagDefinition",symbols:[n.has("define")?{type:"define"}:define,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier]},{name:"IncludeDrs$ebnf$1$subexpression$1",symbols:[n.has("space")?{type:"space"}:space,n.has("int")?{type:"int"}:int]},{name:"IncludeDrs$ebnf$1",symbols:["IncludeDrs$ebnf$1$subexpression$1"],postprocess:p},{name:"IncludeDrs$ebnf$1",symbols:[],postprocess:()=>null},{name:"IncludeDrs",symbols:[n.has("includeDrs")?{type:"includeDrs"}:includeDrs,n.has("space")?{type:"space"}:space,n.has("identifier")?{type:"identifier"}:identifier,"IncludeDrs$ebnf$1"]},{name:"MultilineComment$ebnf$1",symbols:[]},{name:"MultilineComment$ebnf$1$subexpression$1",symbols:[n.has("commentText")?{type:"commentText"}:commentText]},{name:"MultilineComment$ebnf$1$subexpression$1",symbols:["MultilineComment"]},{name:"MultilineComment$ebnf$1",symbols:["MultilineComment$ebnf$1","MultilineComment$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"MultilineComment",symbols:[n.has("commentStart")?{type:"commentStart"}:commentStart,"MultilineComment$ebnf$1",n.has("commentEnd")?{type:"commentEnd"}:commentEnd]},{name:"__$ebnf$1$subexpression$1",symbols:[n.has("eol")?{type:"eol"}:eol]},{name:"__$ebnf$1$subexpression$1",symbols:[n.has("space")?{type:"space"}:space]},{name:"__$ebnf$1",symbols:["__$ebnf$1$subexpression$1"]},{name:"__$ebnf$1$subexpression$2",symbols:[n.has("eol")?{type:"eol"}:eol]},{name:"__$ebnf$1$subexpression$2",symbols:[n.has("space")?{type:"space"}:space]},{name:"__$ebnf$1",symbols:["__$ebnf$1","__$ebnf$1$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"]}],ParserStart:"Script"},Y=Ue;var ne=require("lodash");function ae(e){return e.map(ne.cloneDeep).map(a=>(a.name.includes("$")||(a.postprocess=o=>({type:a.name,children:o})),a))}var L=require("lodash");_();function oe(e){return k(e)}var Ke={Script:e=>l([l(e,"StatementsBlock")],"Script"),TopLevelLine:e=>D(e),TopLevelIf:e=>M(e),TopLevelRandom:e=>B(e),Section:([e,a,o,s])=>{let i=l([e,a,o],"SectionHeader"),c=l([s],"StatementsBlock"),d=c.children.length,t=[...A(c,"If"),...A(c,"Random")].find(r=>N(r,"Section")!==void 0);t&&(d=c.children.indexOf(t));for(let r=d-1;r>=0;r--){let m=c.children[r];if(!(R(m)&&m.type!=="eol")){if(!R(m)&&["Command","ConditionalCommand","RandomCommand"].includes(m.type)||!R(m)&&(N(m,"Command")||N(m,"ConditionalCommand")||N(m,"RandomCommand")))break;d=r}}if(d<c.children.length){let r=c.children.slice(d),m=l([c.children.slice(0,d)],"StatementsBlock");return[l([i,m],"Section"),...r]}else return l([i,c],"Section")},SectionLine:e=>D(e),SectionIf:e=>M(e),SectionRandom:e=>B(e),Command:([e,a])=>l([l(q([e]),"CommandHeader"),a?k(a):null],"Command"),CommandLevelLine:e=>D(e),CommandIf:e=>M(e),CommandRandom:e=>B(e),ConditionalCommand:([e,a])=>l([M([e]),k(a)],"ConditionalCommand"),RandomCommand:([e,a])=>l([B([e]),k(a)],"RandomCommand"),CommandBody:([e,a,o,s,i])=>l([l([e],"PreCurlyComments"),a,o,l([s],"StatementsBlock"),i],"CommandBody"),Attribute:e=>l(e,"Attribute"),ConstDefinition:e=>l(e,"ConstDefinition"),FlagDefinition:e=>l(e,"FlagDefinition"),IncludeDrs:e=>l(e,"IncludeDrs"),MultilineComment:([e,a,o])=>l([e,D(a),o],"MultilineComment"),__:e=>q(e)};function k({type:e,children:a}){return Ke[e](a)}function D(e){let o=se(e).map(s=>"children"in s&&!("childrenByType"in s)?k(s):s);return(0,L.flattenDeep)(o)}function l(e,a){let o={type:a},s=D(e).map(c=>Ve(c,o)),i=(0,L.groupBy)(s,"type");return Object.defineProperties(o,{children:{enumerable:!1,configurable:!0,value:s},childrenByType:{enumerable:!1,configurable:!0,value:i}}),o}function Ve(e,a){return Object.defineProperty(e,"parent",{enumerable:!1,configurable:!0,value:a}),e}function M([e]){e.length===1&&(e=e[0]);let[a,o,s,i,c,d,t,r]=e;return l([a,o,l([s],"ConditionExpression"),l([i,c],"StatementsBlock"),d.map(([m,E,F,x,...U])=>l([m,E,l([F],"ConditionExpression"),x,l(U,"StatementsBlock")],"ElseIf")),t?l([t[0],t[1],l(t.slice(2),"StatementsBlock")],"Else"):null,r],"If")}function B([e]){e.length===1&&(e=e[0]);let[a,o,s,i,c]=e;return l([a,o,l([s,i.map(([d,t,r,m,...E])=>l([d,t,r,m,l(E,"StatementsBlock")],"Chance"))],"StatementsBlock"),c],"Random")}function q(e){let a=se(e).map(o=>R(o)?o:q(o.children));return(0,L.flattenDeep)(a)}function se(e){return(0,L.flattenDeep)(e).filter(a=>a!==null)}_();function te(e){return S(e)}var ze={Script:e=>Object.assign(e,{type:"Script",statements:A(b(e,"StatementsBlock",!0)).map(S)}),If:e=>{let a=Object.assign(e,{type:"IfStatement",condition:s(e)});I(a,"statements",e),"ElseIf"in e.childrenByType&&(a.elseifs=A(e,"ElseIf").map(i=>{let c=Object.assign(i,{type:"ElseIfStatement",condition:s(i)});return I(c,"statements",i),c}));let o=b(e,"Else");return o&&I(a,"elseStatements",o,!0),a;function s(i){return u(b(i,"ConditionExpression",!0),void 0,!0).value}},Random:e=>(Object.assign(e,{type:"RandomStatement"}),I(e,"statements",e,!0),e),Chance:e=>(Object.assign(e,{type:"ChanceStatement",chance:ie(u(e,"int",!0))}),I(e,"statements",e,!0),e),Section:e=>Object.assign(e,{type:"SectionStatement",name:u(e,"identifier",!0).value,statements:A(b(e,"StatementsBlock",!0)).map(S)}),Command:e=>{let a=Object.assign(e,{type:"CommandStatement",...w(b(e,"CommandHeader",!0))}),o=b(e,"CommandBody");return o&&Q(a,o),a},ConditionalCommand:e=>{let a=Object.assign(e,{type:"ConditionalCommandStatement",header:S(b(e,"If",!0))});return Q(a,b(e,"CommandBody",!0)),a},RandomCommand:e=>{let a=Object.assign(e,{type:"RandomCommandStatement",header:S(b(e,"Random",!0))});return Q(a,b(e,"CommandBody",!0)),a},Attribute:e=>Object.assign(e,{type:"AttributeStatement",...w(e)}),ConstDefinition:e=>{let{name:a,args:o}=w(e);return Object.assign(e,{type:"DeclarationStatement",kind:"const",name:a,value:o[0]})},FlagDefinition:e=>Object.assign(e,{type:"DeclarationStatement",kind:"define",name:w(e).name}),IncludeDrs:e=>{let{name:a,args:o}=w(e),s=Object.assign(e,{type:"IncludeDrsStatement",filename:a});return o.length&&(s.id=o[0]),s},MultilineComment:e=>Object.assign(e,{type:"MultilineComment",comment:H(e).slice(1,-1).map(a=>a.text).join("")})};function Q(e,a){I(e,"statements",a,!0);let o=b(a,"PreCurlyComments");if(o){let s=A(o,"MultilineComment").map(S);s.length&&(e.preLeftCurlyComments=s)}}function S(e){return ze[e.type](e)}function I(e,a,o,s=!1){let i=A(b(o,"StatementsBlock",!0)).map(S);(i.length||s)&&(e[a]=i)}function w(e){let[a,...o]=e.children.filter(Ye).map(ie);return{name:a,args:o}}function ie(e){return e.type==="int"?parseInt(e.value,10):e.value}function Ye(e){return["int","identifier"].includes(e.type)}z();h();h();var je={...Y,ParserRules:ae(Y.ParserRules)},Je=P.Grammar.fromCompiled(je);function qe(e){let a=new P.Parser(Je);try{a.feed(e);let o=a.results.map(oe).map(te);if(o.length>1)throw new Error("Ambiguous grammar! This is likely a problem with Mangudai itself, not your script. Please report this issue along with the script that caused it.");if(o.length===0){let{line:s,col:i}=a.lexer;throw{name:"ParseError",message:"Unexpected end of input.",boundaries:{start:{line:s,col:i-1},end:{line:s,col:i}}}}return{ast:o[0],errors:[]}}catch(o){let s;return o&&o.boundaries?s=o:o&&o.token&&o.token.type==="invalid"?s=V(o):o&&o.token?s=re(o):s={name:"ParseError",message:o&&o.message,boundaries:{start:{line:1,col:0},end:{line:1,col:1}}},{errors:[s]}}}function re(e){let a=e.token,o=a.line||1,s=a.col||1,i=`Unexpected token '${a.value}' at line ${o}, column ${s}`;return a.type==="EOF"?i=`Unexpected end of file at line ${o}, column ${s}. Expected more content.`:a.type==="INVALID"?i=`Invalid character '${a.value}' at line ${o}, column ${s}. Check for typos or unsupported characters.`:i=`Unexpected ${a.type} '${a.value}' at line ${o}, column ${s}. Expected a different token.`,{name:"ParseError",message:i,boundaries:$(a)}}var tn={noConstantCondition:(ce(),C(me)),noDupeAttributes:(de(),C($e)),noDupeCommands:(ue(),C(pe)),noEmptyElse:(fe(),C(be)),noEmptySections:(ve(),C(ye)),noIncludeDrs:(he(),C(Ce)),noRedeclare:(Ae(),C(ge)),eolLast:(Ee(),C(_e))};function rn(e,a={}){let o=[];return e&&Object.entries(tn).forEach(([s,i])=>o.push(...i.check(e,a[s]))),o}var Se={PLAYER_SETUP:{docs:"Change general player settings.",commands:{random_placement:{docs:"Place players in random parts of the map. You can omit this because it is the default."}}},LAND_GENERATION:{docs:"Create basic territories: player starting lands, grass continents on a water base, etc.",commands:{base_terrain:{docs:"Set the base terrain. Initially, the map is filled with this terrain type.",arguments:[{name:"TERRAIN",type:"terrain",default:"GRASS"}]},create_player_lands:{docs:"Create starting lands for all players. Use multiple times to add multiple towns for each player. If you create no player lands at all, you can't place starting units and resources, only a Town Center and villagers randomly placed on the map.",attributes:{terrain_type:{docs:"Set a terrain type different from the base terrain.",arguments:[{name:"TERRAIN",type:"terrain",default:"GRASS"}]},land_percent:{docs:"Total size of all player lands as a percentage of the map size.",arguments:[{name:"PERCENT",type:"percentage",default:100}],conflictsWith:"number_of_tiles"},number_of_tiles:{docs:"Size of each player land as a fixed number of tiles.",arguments:[{name:"N",type:"number"}]},base_size:{docs:"Enforce minimum width and height of each player land even when `land_percent` and `number_of_tiles` are small. If `base_size` is higher than land size, the land becomes more like a square. Value 10 means 10x10 tiles minimum land size.",arguments:[{name:"N",type:"number",default:0}]},left_border:{docs:"Minimum distance from SW border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},right_border:{docs:"Minimum distance from NE border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},top_border:{docs:"Minimum distance from NW border as a percentage of the map width. To avoid crashes, set at least one of the other three borders.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},bottom_border:{docs:"Minimum distance from SE border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},border_fuzziness:{docs:"Border regularity. Value 100 means completely square, 0 means extremely irregular outside the borders. Values 5-20 make edges ragged and natural.",arguments:[{name:"PERCENT",type:"percentage"}]},clumping_factor:{docs:"Shape regularity. Value 100 means close to a perfect circle, 0 means weird snaky lands. Use `base_size` to enforce minimum width.",arguments:[{name:"PERCENT",type:"percentage",default:8}]},zone:{docs:"Assign all player lands to a zone to use in `other_zone_avoidance_distance`. By default, each player land is a different zone like on Islands, non-player lands are all in the same zone. Use any number. Value 99 leads to a crash, but 100 and above work again.",arguments:[{name:"N",type:"number"}]},set_zone_randomly:{docs:"Assign each player land to a random zone to use in `other_zone_avoidance_distance`. Some players may share a zone like on Archipelago. Use any number. Value 99 leads to a crash, but 100 and above work again."},set_zone_by_team:{docs:"Assign each player land to a zone grouping by team. Allies will share the same zone like on Team Islands. Use any number. Value 99 leads to a crash, but 100 and above work again."},other_zone_avoidance_distance:{docs:"Minimum distance, in tiles, to zones of other player lands (see `zone`, `set_zone_randomly`, `set_zone_by_team`). Useful to keep islands separated, etc. If two lands have different values, the smaller avoidance distance will be used.",arguments:[{name:"N",type:"number"}]}}},create_land:{docs:'Creates a generic land. It\'s called "land" but it can also be a lake or any other terrain type. Use `assign_to_player` if you want to create different towns for different players.',attributes:{terrain_type:{docs:"Set a terrain type different from the base terrain.",arguments:[{name:"TERRAIN",type:"terrain",default:"GRASS"}]},land_percent:{docs:"The size of the land as a percentage of the map size.",arguments:[{name:"PERCENT",type:"percentage",default:100}],conflictsWith:"number_of_tiles"},number_of_tiles:{docs:"The size of the land as a fixed number of tiles.",arguments:[{name:"N",type:"number"}]},base_size:{docs:"Enforce minimum width and height of the land even when `land_percent` and `number_of_tiles` are small. If `base_size` is higher than land size, the land becomes more like a square. Value 10 means 10x10 tiles minimum land size.",arguments:[{name:"N",type:"number",default:0}]},left_border:{docs:"Minimum distance from SW border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},right_border:{docs:"Minimum distance from NE border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},top_border:{docs:"Minimum distance from NW border as a percentage of the map width. To avoid crashes, set at least one of the other three borders.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},bottom_border:{docs:"Minimum distance from SE border as a percentage of the map width.",arguments:[{name:"PERCENT",type:"percentage",default:0}]},land_position:{docs:"Set fixed position of the center of the land. `land_position 50 50` means exactly the center of the map. Setting Y coordinate to 100 leads to a crash. The land will not be created if the specified position is outside of borders set with `left_border`, `right_border`, `top_border`, `bottom_border`.",arguments:[{name:"X",type:"percentage",default:0},{name:"Y",type:"percentage",default:0}],conflictsWith:"assign_to_player"},border_fuzziness:{docs:"Border regularity. Value 100 means smooth border, 0 means extremely irregular outside the borders. Values 5-20 make edges ragged and natural.",arguments:[{name:"PERCENT",type:"percentage"}]},clumping_factor:{docs:"Shape regularity. Value 100 means close to a perfect circle, 0 means weird snake lands. Use `base_size` to enforce minimum width.",arguments:[{name:"PERCENT",type:"percentage",default:8}]},zone:{docs:"Assign the land to a zone to use in `other_zone_avoidance_distance`. By default, each player land is a different zone like on Islands, non-player lands are all in the same zone. Use any number. Value 99 leads to a crash, but 100 and above work again.",arguments:[{name:"N",type:"number"}]},set_zone_randomly:{docs:"Assign the land to a random zone to use in `other_zone_avoidance_distance`. Some lands may share a zone. Use any number. Value 99 leads to a crash, but 100 and above work again."},other_zone_avoidance_distance:{docs:"Minimum distance, in tiles, to lands of other zones (see `zone`, `set_zone_randomly`). Useful to keep islands separated, etc. If two lands have different values, the smaller avoidance distance will be used.",arguments:[{name:"N",type:"number"}]},land_id:{docs:"Assign a numeric label to the land to use in `create_object` commands with `place_on_specific_land_id` attribute. Land must be separated from others by water or other terrain where the objects can't be placed (shallow, ice, ...). Assign the same id to multiple lands to place objects on each of them. This attribute is not related to zones (see `zone`).",arguments:[{name:"N",type:"number"}]},assign_to_player:{docs:"Make this land player's (1-8) starting position. An alternative to `create_player_lands`. Assign 8 different lands to 8 players to support up to 8 players. Player number refers to position in lobby, not color (player 1 is first name on list, not necessarily blue). If some players are not playing, their lands won't be created. To create unequal starts, use this together with `create_object` command with `terrain_to_place_on` attribute.",arguments:[{name:"PLAYER",type:"number"}]}}}}},ELEVATION_GENERATION:{docs:"Create smooth and walkable hills. They automatically avoid players' starting areas.",commands:{create_elevation:{docs:"Creates one or more hills with random height, up to a specified limit. Generally, hills with larger base reach greater height.",arguments:[{name:"MAX_HEIGHT",type:"elevation"}],attributes:{base_terrain:{docs:"Create hills only on a certain terrain.",arguments:[{name:"TERRAIN",type:"terrain"}]},number_of_tiles:{docs:"Total base size of all hills as a number of tiles.",arguments:[{name:"N",type:"number",default:100}]},number_of_clumps:{docs:"Maximum number of distinct hills.",arguments:[{name:"N",type:"number",default:1}]},set_scale_by_size:{docs:"Automatically scale base size to the map size. Set `number_of_tiles` to the size you want on a 100x100 map (Tiny is 120x120)."},set_scale_by_groups:{docs:"Automatically scale number of hills to the map size. Set `number_of_clumps` to the number you want on a 100x100 map (Tiny is 120x120)."},spacing:{docs:"Set the spacing on each height level. Larger numbers produce hills with rings of flat areas on each level. This can be used to increase buildable land and prevent long sloped areas.",arguments:[{name:"N",type:"number",default:1}]}}}}},CLIFF_GENERATION:{docs:"Create cliffs - the rocky, non-walkable canyons. You can't create single cliffs, but you can define general cliff statistics. All commands have a reasonable default; typing just `<CLIFF_GENERATION>` is enough to create normal cliffs. If you don\u2019t want your map to have cliffs, then don't put in a `<CLIFF_GENERATION>` section at all. Cliffs automatically avoid player starting areas and the centers of non-player lands.",commands:{min_number_of_cliffs:{docs:"Limit the number of cliffs on the map. Doesn't scale with map size, use `if` statements to do it manually.",arguments:[{name:"N",type:"number"}]},max_number_of_cliffs:{docs:"Limit the number of cliffs on the map. Doesn't scale with map size, use `if` statements to do it manually.",arguments:[{name:"N",type:"number"}]},min_length_of_cliff:{docs:"Limit the length of each cliff.",arguments:[{name:"N",type:"number"}]},max_length_of_cliff:{docs:"Limit the length of each cliff.",arguments:[{name:"N",type:"number"}]},cliff_curliness:{docs:"Chance of turning at each cliff tile. Low values makes straighter cliffs, high values makes curlier cliffs.",arguments:[{name:"PERCENT",type:"percentage"}]},min_distance_cliffs:{docs:"Minimum distance between cliffs, in tiles.",arguments:[{name:"N",type:"number",default:2}]},min_terrain_distance:{docs:"Minimum distance from the nearest body of water (including ice). Does not apply to water created in `<TERRAIN_GENERATION>`.",arguments:[{name:"N",type:"number",default:2}]}}},TERRAIN_GENERATION:{docs:"Create more fine-tuned terrain patches on top of what's defined in `<LAND_GENERATION>`. The order is important: to place palm forest on desert, create desert first. This section is processed after `<ELEVATION_GENERATION>`, so beware that it's possible to place water on hills.",commands:{create_terrain:{docs:"Create one or more patches of a terrain.",arguments:[{name:"TERRAIN",type:"terrain"}],attributes:{base_terrain:{docs:"What terrain type the new terrain will be placed on.",arguments:[{name:"TERRAIN",type:"terrain",default:"GRASS"}]},land_percent:{docs:"Total size of all terrain patches as a percentage of the map size.",arguments:[{name:"PERCENT",type:"percentage"}],conflictsWith:"number_of_tiles"},number_of_tiles:{docs:"Size of terrain as a fixed number of tiles.",arguments:[{name:"N",type:"number"}]},number_of_clumps:{docs:"Maximum number of distinct terrain patches.",arguments:[{name:"N",type:"number",default:1}]},set_scale_by_size:{docs:"Automatically scale terrain size to the map size. Set `number_of_tiles` to the size you want on a 100x100 map (Tiny is 120x120)."},set_scale_by_groups:{docs:"Automatically scale number of patches to the map size. Set `number_of_clumps` to the number you want on a 100x100 map (Tiny is 120x120)."},spacing_to_other_terrain_types:{docs:"Minimum distance, in tiles, to other types of terrains and cliffs. Useful to keep forests away from water, etc. Order is important: only checks terrains placed before this one.",arguments:[{name:"N",type:"number",default:0}]},set_avoid_player_start_areas:{docs:"Force terrain to stay away from the center of player lands. Without it, forests and lakes may surround Town Centers."},height_limits:{docs:"Place terrain only on certain elevation levels.",arguments:[{name:"MIN",type:"elevation",default:0},{name:"MAX",type:"elevation",default:7}]},set_flat_terrain_only:{docs:"Place terrain only on flat terrain of any elevation level. In edge cases this doesn't work, use `height_limits 0 0` if you're affected by that."},clumping_factor:{docs:"Shape regularity. Value 100 means close to a perfect circle, 0 means weird snaky patches.",arguments:[{name:"PERCENT",type:"percentage",default:20}]}}}}},CONNECTION_GENERATION:{docs:"Connections are lines of terrain that link lands from `<LAND_GENERATION>`. Usually, their job is to ensure that units can walk to other lands. You can't create single connections, only general systems of connections.",commands:{create_connect_all_lands:{docs:"Connect all defined lands. Doesn't include islands created with `<TERRAIN_GENERATION>`.",attributes:W()},create_connect_all_players_land:{docs:"Connect all player lands. Connections may pass through non-player lands if that's the easiest way.",attributes:W()},create_connect_teams_lands:{docs:"Connect all lands of a team with each other. Connections may pass through non-player and enemy lands if that's the easiest way.",attributes:W()},create_connect_same_land_zones:{docs:"Appears to behave the exact same way as `create_connect_all_lands`.",attributes:W()}}},OBJECTS_GENERATION:{docs:"Create objects like units, buildings, resources, and decorations such as hawks.",commands:{create_object:{docs:"Creates one or more objects of a particular type, for each player or for gaia (nature). To avoid crashes and lag, don't use `create_object` more than 99 times.",arguments:[{name:"OBJECT_TYPE",type:"entity"}],attributes:{number_of_objects:{docs:"How many objects to create.",arguments:[{name:"N",type:"number",default:1}]},number_of_groups:{docs:"Create multiple groups with `number_of_objects` objects in each. Default is no groups: objects are independent and completely scattered.",arguments:[{name:"N",type:"number"}]},group_variance:{docs:"Randomize number of objects in every group. Use with `number_of_groups`. `number_of_objects 5` and `group_variance 2` means groups of 5 \xB1 2 objects.",arguments:[{name:"N",type:"number"}]},set_scaling_to_map_size:{docs:"Automatically scale group number to the map size. Set `number_of_groups` to the size you want on a 100x100 map (Tiny is 120x120). If `number_of_groups` is not set, scales `number_of_objects` instead.",conflictsWith:"set_scaling_to_player_number"},set_scaling_to_player_number:{docs:"Automatically multiply `number_of_groups` by the number of players in the game. If `number_of_groups` is not set, multiplies `number_of_objects` instead."},set_place_for_every_player:{docs:"Give specified number of objects to each player. Useful for Town Centers, villagers, etc. Cannot place objects on lands that are separated from player's land by water or other terrain where the objects can't be placed (shallow, ice, ...). Doesn't work with water units, unless player land is on dirt, player is AI, or water is part of the player land. This is madness. See also `set_gaia_object_only`."},set_gaia_object_only:{docs:"Must be used for non-controllable objects when using `set_place_for_every_player`. If used with a controllable object (unit, building), makes it neutral and rescuable like sheep."},terrain_to_place_on:{docs:"Allow objects to be placed only on particular terrain. Cannot be used to force an invalid combination such as relics on water.",arguments:[{name:"TERRAIN",type:"terrain"}]},min_distance_to_players:{docs:"Minimum distance, in tiles, from the center of the land that owns the object. If used with `set_place_for_every_player`, sets minimum distance to all players.",arguments:[{name:"N",type:"number"}]},max_distance_to_players:{docs:"Maximum distance, in tiles, from the center of the land that owns the object. If used with `set_place_for_every_player`, has no effect.",arguments:[{name:"N",type:"number"}]},max_distance_to_other_zones:{docs:"Minimum (not maximum) distance, in tiles, from borders of other zones. Useful to keep objects away from shores. See also commands `create_land` and `create_player_lands` with `zone` attribute.",arguments:[{name:"N",type:"number"}]},min_distance_group_placement:{docs:"Minimum distance, in tiles, to all objects of any type created in this command and after it. If used with `number_of_groups`, keeps distance between groups, not objects inside each group. Already existing objects are ignored. See also `temp_min_distance_group_placement`.",arguments:[{name:"N",type:"number"}]},temp_min_distance_group_placement:{docs:"Like `min_distance_group_placement` but doesn't affect objects created after this command.",arguments:[{name:"N",type:"number"}]},group_placement_radius:{docs:"Force objects in every group to stay within the specified distance, in tiles, from the center of the group. Value 3 means a square 7x7 tiles.",arguments:[{name:"N",type:"number",default:3}]},set_tight_grouping:{docs:"Create objects of the same group touching each other, like gold and stone. Doesn't work with objects larger than 1 tile and can't overlap, like most buildings. `set_loose_grouping` is the default.",conflictsWith:"set_loose_grouping"},set_loose_grouping:{docs:"Create objects of the same group with 1-2 tiles distance from each other. You can omit this because it is the default."},place_on_specific_land_id:{docs:"Place objects only on the land marked by the specified `land_id`. Land must be separated from other lands by water or other terrain where the objects can't be placed (shallow, ice, ...). If there are multiple lands with the same id, specified number of objects is placed on each of them.",conflictsWith:"set_place_for_every_player",arguments:[{name:"N",type:"number"}]}}}}}};function W(){return{default_terrain_replacement:{docs:"Creates connections by replacing all intervening terrain with the specified terrain. If used, use before `replace_terrain`.",arguments:[{name:"TERRAIN",type:"terrain"}]},replace_terrain:{docs:"Replace base terrain with a connection terrain. Can be used multiple times for multiple replacements.",arguments:[{name:"INITIAL_TERRAIN",type:"terrain"},{name:"REPLACE_TERRAIN",type:"terrain"}]},terrain_cost:{docs:"Set cost of passing through particular terrain type. Connections are more likely to form over terrains with lower cost and avoid terrains with higher cost.",arguments:[{name:"TERRAIN",type:"terrain"},{name:"COST",type:"number",default:1}]},terrain_size:{docs:"Set width of connections on particular terrain type. First number is average width in tiles, second number is maximum width variation relative to the average. Values `5 2` create connections of width 5 \xB1 2. If a connection looks wider than these values, it's two parallel ones and you need to set a higher cost (see `terrain_cost`).",arguments:[{name:"AVERAGE",type:"number"},{name:"VARIATION",type:"number"}]}}}var Te={PLAYER_SETUP:{commands:{grouped_by_team:{docs:"Place team members close to each other on the map. `base_size` attribute of `create_player_lands` command determines the distance between players in a team.",conflictsWith:"random_placement"},nomad_resources:{docs:"Adds the cost of a Town Center (275 wood, 100 stone) to starting resources as on nomad maps. Can be used even if your map is not a nomad map."}}},LAND_GENERATION:{commands:{create_player_lands:{attributes:{base_elevation:{docs:"Modify the base elevation for player and standard lands. `<ELEVATION_GENERATION>` section must exist if this attribute is used.",arguments:[{name:"N",type:"elevation",default:1}]}}}}},ELEVATION_GENERATION:{},CLIFF_GENERATION:{},TERRAIN_GENERATION:{},CONNECTION_GENERATION:{},OBJECTS_GENERATION:{}};var Re={PLAYER_SETUP:{commands:{grouped_by_team:{docs:"Place team members close to each other on the map. `base_size` attribute of `create_player_lands` command determines the distance between players in a team.",conflictsWith:"random_placement"},nomad_resources:{docs:"Adds the cost of a Town Center (275 wood, 100 stone) to starting resources as on nomad maps. Can be used even if your map is not a nomad map."}}},LAND_GENERATION:{commands:{create_player_lands:{attributes:{base_elevation:{docs:"Modify the base elevation for player and standard lands. `<ELEVATION_GENERATION>` section must exist if this attribute is used.",arguments:[{name:"N",type:"elevation",default:1}]}}}}},ELEVATION_GENERATION:{},CLIFF_GENERATION:{},TERRAIN_GENERATION:{},CONNECTION_GENERATION:{},OBJECTS_GENERATION:{commands:{create_object:{attributes:{resource_delta:{docs:"Modify the resources of the object. Useful to create gold mines with only 300 gold, and so on.",arguments:[{name:"DIFFERENCE",type:"number",default:0}]}}}}}};var we,Oe,He;try{we=(Ie(),C(Le)),Oe=(Ne(),C(xe)),He=(ke(),C(De))}catch{}0&&(module.exports={aoc,aocCommands,dlc,dlcCommands,formatParseError,lint,parse,userpatch,userpatchCommands});
//# sourceMappingURL=index.js.map
